<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Syntax on Michael Brunger</title><link>http://localhost:1313/tags/syntax/</link><description>Recent content in Syntax on Michael Brunger</description><image><title>Michael Brunger</title><url>http://localhost:1313/site-feature-image.jpg</url><link>http://localhost:1313/site-feature-image.jpg</link></image><generator>Hugo -- 0.146.7</generator><language>en-GB</language><lastBuildDate>Tue, 06 May 2025 12:41:15 +0100</lastBuildDate><atom:link href="http://localhost:1313/tags/syntax/index.xml" rel="self" type="application/rss+xml"/><item><title>Part 3: Python Syntax Fundamentals &amp; Language Features</title><link>http://localhost:1313/python-foundations-syntax/</link><pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate><guid>http://localhost:1313/python-foundations-syntax/</guid><description>Master Python&amp;#39;s core syntax including variables, data types, control flow, comprehensions, lambdas, iterators, generators, and basic error handling mechanisms.</description><content:encoded><![CDATA[<h1 id="post-3-python-syntax-fundamentals--language-features">Post 3: Python Syntax Fundamentals &amp; Language Features</h1>
<p>Welcome to the third post in my Python learning journey. In the first two posts, we installed Python and set up a proper development environment. Now it&rsquo;s time to dive into the language itself. This post covers the fundamental building blocks of Python code that I&rsquo;ve been learning.</p>
<p>We&rsquo;ll explore:</p>
<ol>
<li>Variables and basic data types</li>
<li>Operators and expressions</li>
<li>Control flow with conditionals and loops</li>
<li>List comprehensions and lambdas</li>
<li>Iterators and generators</li>
<li>Error handling with try/except</li>
</ol>
<p>This post is a bit longer than the previous ones, but these fundamentals form the foundation of everything else in Python, so it&rsquo;s worth taking the time to understand them.</p>
<hr>
<h2 id="1-variables-and-basic-data-types">1. Variables and Basic Data Types</h2>
<p>Python is dynamically typed, meaning you don&rsquo;t need to declare variable types explicitly. Coming from Excel formulas where everything just works, I found this quite intuitive.</p>
<h3 id="11-variables-and-assignment">1.1 Variables and Assignment</h3>
<p>Variables in Python are created when you first assign a value to them:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Creating variables</span>
</span></span><span style="display:flex;"><span>name <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;Alex&#34;</span>
</span></span><span style="display:flex;"><span>age <span style="color:#f92672">=</span> <span style="color:#ae81ff">35</span>
</span></span><span style="display:flex;"><span>hourly_rate <span style="color:#f92672">=</span> <span style="color:#ae81ff">45.50</span>
</span></span><span style="display:flex;"><span>is_python_fun <span style="color:#f92672">=</span> <span style="color:#66d9ef">True</span>
</span></span></code></pre></div><p>Variable names:</p>
<ul>
<li>Can contain letters, numbers, and underscores</li>
<li>Cannot start with a number</li>
<li>Are case-sensitive (<code>rate</code> and <code>Rate</code> are different variables)</li>
<li>Should follow the <code>snake_case</code> convention (lowercase with underscores)</li>
</ul>
<h3 id="12-basic-data-types">1.2 Basic Data Types</h3>
<p>Python has several built-in data types:</p>
<h4 id="numbers">Numbers</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Integers (whole numbers)</span>
</span></span><span style="display:flex;"><span>count <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>
</span></span><span style="display:flex;"><span>negative_number <span style="color:#f92672">=</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">5</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Floating-point (decimals)</span>
</span></span><span style="display:flex;"><span>pi <span style="color:#f92672">=</span> <span style="color:#ae81ff">3.14159</span>
</span></span><span style="display:flex;"><span>discount_rate <span style="color:#f92672">=</span> <span style="color:#ae81ff">0.15</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Complex numbers</span>
</span></span><span style="display:flex;"><span>complex_number <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">4</span>j  <span style="color:#75715e"># Not often used in business applications</span>
</span></span></code></pre></div><h4 id="strings">Strings</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Text enclosed in quotes (single or double)</span>
</span></span><span style="display:flex;"><span>first_name <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;John&#34;</span>
</span></span><span style="display:flex;"><span>last_name <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;Doe&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Multi-line strings use triple quotes</span>
</span></span><span style="display:flex;"><span>address <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;&#34;123 Main Street
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">Anytown, CA 12345&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># String concatenation</span>
</span></span><span style="display:flex;"><span>full_name <span style="color:#f92672">=</span> first_name <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34; &#34;</span> <span style="color:#f92672">+</span> last_name  <span style="color:#75715e"># &#34;John Doe&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># f-strings (Python 3.6+) - my preferred way to format strings</span>
</span></span><span style="display:flex;"><span>greeting <span style="color:#f92672">=</span> <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Hello, </span><span style="color:#e6db74">{</span>first_name<span style="color:#e6db74">}</span><span style="color:#e6db74">! You are </span><span style="color:#e6db74">{</span>age<span style="color:#e6db74">}</span><span style="color:#e6db74"> years old.&#34;</span>
</span></span></code></pre></div><h4 id="booleans">Booleans</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># True or False values</span>
</span></span><span style="display:flex;"><span>is_active <span style="color:#f92672">=</span> <span style="color:#66d9ef">True</span>
</span></span><span style="display:flex;"><span>has_paid <span style="color:#f92672">=</span> <span style="color:#66d9ef">False</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Boolean operations</span>
</span></span><span style="display:flex;"><span>is_valid_customer <span style="color:#f92672">=</span> is_active <span style="color:#f92672">and</span> has_paid  <span style="color:#75715e"># False</span>
</span></span><span style="display:flex;"><span>can_contact <span style="color:#f92672">=</span> is_active <span style="color:#f92672">or</span> has_paid  <span style="color:#75715e"># True</span>
</span></span><span style="display:flex;"><span>is_not_active <span style="color:#f92672">=</span> <span style="color:#f92672">not</span> is_active  <span style="color:#75715e"># False</span>
</span></span></code></pre></div><h4 id="none-type">None Type</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Represents absence of value (similar to NULL in databases)</span>
</span></span><span style="display:flex;"><span>result <span style="color:#f92672">=</span> <span style="color:#66d9ef">None</span>
</span></span></code></pre></div><h3 id="13-type-conversion">1.3 Type Conversion</h3>
<p>Python can convert between types:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># String to number</span>
</span></span><span style="display:flex;"><span>age_str <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;35&#34;</span>
</span></span><span style="display:flex;"><span>age_num <span style="color:#f92672">=</span> int(age_str)  <span style="color:#75715e"># 35 as integer</span>
</span></span><span style="display:flex;"><span>price_float <span style="color:#f92672">=</span> float(<span style="color:#e6db74">&#34;45.50&#34;</span>)  <span style="color:#75715e"># 45.5 as float</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Number to string</span>
</span></span><span style="display:flex;"><span>count_str <span style="color:#f92672">=</span> str(<span style="color:#ae81ff">10</span>)  <span style="color:#75715e"># &#34;10&#34; as string</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Check type of a variable</span>
</span></span><span style="display:flex;"><span>print(type(age_num))  <span style="color:#75715e"># &lt;class &#39;int&#39;&gt;</span>
</span></span></code></pre></div><hr>
<h2 id="2-operators-and-expressions">2. Operators and Expressions</h2>
<p>Python supports various operators for calculations and comparisons.</p>
<h3 id="21-arithmetic-operators">2.1 Arithmetic Operators</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>a <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>
</span></span><span style="display:flex;"><span>b <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>addition <span style="color:#f92672">=</span> a <span style="color:#f92672">+</span> b        <span style="color:#75715e"># 13</span>
</span></span><span style="display:flex;"><span>subtraction <span style="color:#f92672">=</span> a <span style="color:#f92672">-</span> b     <span style="color:#75715e"># 7</span>
</span></span><span style="display:flex;"><span>multiplication <span style="color:#f92672">=</span> a <span style="color:#f92672">*</span> b  <span style="color:#75715e"># 30</span>
</span></span><span style="display:flex;"><span>division <span style="color:#f92672">=</span> a <span style="color:#f92672">/</span> b        <span style="color:#75715e"># 3.3333... (always returns float)</span>
</span></span><span style="display:flex;"><span>floor_division <span style="color:#f92672">=</span> a <span style="color:#f92672">//</span> b <span style="color:#75715e"># 3 (integer division, rounds down)</span>
</span></span><span style="display:flex;"><span>modulus <span style="color:#f92672">=</span> a <span style="color:#f92672">%</span> b         <span style="color:#75715e"># 1 (remainder of division)</span>
</span></span><span style="display:flex;"><span>exponent <span style="color:#f92672">=</span> a <span style="color:#f92672">**</span> b       <span style="color:#75715e"># 1000 (10 raised to power of 3)</span>
</span></span></code></pre></div><h3 id="22-comparison-operators">2.2 Comparison Operators</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>a <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>
</span></span><span style="display:flex;"><span>b <span style="color:#f92672">=</span> <span style="color:#ae81ff">3</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>equal <span style="color:#f92672">=</span> a <span style="color:#f92672">==</span> b              <span style="color:#75715e"># False</span>
</span></span><span style="display:flex;"><span>not_equal <span style="color:#f92672">=</span> a <span style="color:#f92672">!=</span> b          <span style="color:#75715e"># True</span>
</span></span><span style="display:flex;"><span>greater_than <span style="color:#f92672">=</span> a <span style="color:#f92672">&gt;</span> b        <span style="color:#75715e"># True</span>
</span></span><span style="display:flex;"><span>less_than <span style="color:#f92672">=</span> a <span style="color:#f92672">&lt;</span> b           <span style="color:#75715e"># False</span>
</span></span><span style="display:flex;"><span>greater_or_equal <span style="color:#f92672">=</span> a <span style="color:#f92672">&gt;=</span> b   <span style="color:#75715e"># True</span>
</span></span><span style="display:flex;"><span>less_or_equal <span style="color:#f92672">=</span> a <span style="color:#f92672">&lt;=</span> b      <span style="color:#75715e"># False</span>
</span></span></code></pre></div><h3 id="23-assignment-operators">2.3 Assignment Operators</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Simple assignment</span>
</span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Combined operators</span>
</span></span><span style="display:flex;"><span>x <span style="color:#f92672">+=</span> <span style="color:#ae81ff">5</span>   <span style="color:#75715e"># Same as x = x + 5 (x becomes 15)</span>
</span></span><span style="display:flex;"><span>x <span style="color:#f92672">-=</span> <span style="color:#ae81ff">3</span>   <span style="color:#75715e"># Same as x = x - 3 (x becomes 12)</span>
</span></span><span style="display:flex;"><span>x <span style="color:#f92672">*=</span> <span style="color:#ae81ff">2</span>   <span style="color:#75715e"># Same as x = x * 2 (x becomes 24)</span>
</span></span><span style="display:flex;"><span>x <span style="color:#f92672">/=</span> <span style="color:#ae81ff">4</span>   <span style="color:#75715e"># Same as x = x / 4 (x becomes 6.0)</span>
</span></span></code></pre></div><hr>
<h2 id="3-control-flow">3. Control Flow</h2>
<p>Control flow determines the order in which code executes based on conditions and loops.</p>
<h3 id="31-conditional-statements-ifelifelse">3.1 Conditional Statements (if/elif/else)</h3>
<p>Python uses indentation (whitespace) to define code blocks:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>age <span style="color:#f92672">=</span> <span style="color:#ae81ff">25</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> age <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">18</span>:
</span></span><span style="display:flex;"><span>    print(<span style="color:#e6db74">&#34;Minor&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">elif</span> age <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">65</span>:
</span></span><span style="display:flex;"><span>    print(<span style="color:#e6db74">&#34;Adult&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">else</span>:
</span></span><span style="display:flex;"><span>    print(<span style="color:#e6db74">&#34;Senior&#34;</span>)
</span></span></code></pre></div><p>Multiple conditions:</p>
]]></content:encoded></item></channel></rss>