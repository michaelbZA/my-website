<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Tkinter on Michael Brunger</title><link>http://localhost:1313/tags/tkinter/</link><description>Recent content in Tkinter on Michael Brunger</description><image><title>Michael Brunger</title><url>http://localhost:1313/site-feature-image.jpg</url><link>http://localhost:1313/site-feature-image.jpg</link></image><generator>Hugo -- 0.146.7</generator><language>en-GB</language><lastBuildDate>Fri, 09 May 2025 14:44:55 +0100</lastBuildDate><atom:link href="http://localhost:1313/tags/tkinter/index.xml" rel="self" type="application/rss+xml"/><item><title>Part 16: Building Simple GUI Applications with Tkinter</title><link>http://localhost:1313/simple-gui-applications-tkinter/</link><pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate><guid>http://localhost:1313/simple-gui-applications-tkinter/</guid><description>Create desktop applications with Python&amp;#39;s built-in Tkinter library. Learn about widgets, layout managers, and build a practical mini-project with a graphical user interface.</description><content:encoded><![CDATA[<h1 id="building-simple-gui-applications-with-tkinter">Building Simple GUI Applications with Tkinter</h1>
<p><em>Part 16 of my Learning Python in Public series</em></p>
<p>As a finance professional diving into programming, I&rsquo;ve realized that data analysis is only half the battle. Sometimes you need to package your calculations into user-friendly applications that colleagues can use without knowing Python. That&rsquo;s where GUI (Graphical User Interface) programming comes in, and Python makes this surprisingly accessible with Tkinter.</p>
<h2 id="what-is-tkinter">What is Tkinter?</h2>
<p>Tkinter (pronounced &ldquo;tee-kay-inter&rdquo;) is Python&rsquo;s standard GUI framework that comes bundled with your Python installation. No extra pip installs needed! It&rsquo;s based on the Tk toolkit, which has been around since the 1990s. While not the most modern-looking framework, it&rsquo;s:</p>
<ul>
<li>Built-in and instantly available</li>
<li>Relatively easy to learn</li>
<li>Cross-platform (Windows, macOS, Linux)</li>
<li>Perfect for internal tools and prototypes</li>
</ul>
<h2 id="setting-up-your-first-tkinter-application">Setting Up Your First Tkinter Application</h2>
<p>Let&rsquo;s start with the absolute basics. Every Tkinter application follows a similar structure:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> tkinter <span style="color:#66d9ef">as</span> tk
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create the main window</span>
</span></span><span style="display:flex;"><span>root <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Tk()
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;My First Tkinter App&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;400x300&#34;</span>)  <span style="color:#75715e"># Width x Height</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add widgets here...</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Start the event loop</span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>mainloop()
</span></span></code></pre></div><p>If you run this code, you&rsquo;ll see a small, empty window appear. Let&rsquo;s break down what&rsquo;s happening:</p>
<ol>
<li>We import <code>tkinter</code> and alias it as <code>tk</code> (standard practice)</li>
<li>We create a main window (called <code>root</code> by convention)</li>
<li>We set a title and dimensions</li>
<li><code>mainloop()</code> starts the event loop that listens for user interactions</li>
</ol>
<p>Nothing fancy yet, but you&rsquo;ve already created your first GUI application!</p>
<h2 id="core-tkinter-widgets">Core Tkinter Widgets</h2>
<p>Tkinter provides a set of basic widgets (UI elements) you can add to your application:</p>
<ul>
<li><strong>Label</strong>: Displays text or images</li>
<li><strong>Button</strong>: Clickable element that triggers actions</li>
<li><strong>Entry</strong>: Single-line text input field</li>
<li><strong>Text</strong>: Multi-line text input area</li>
<li><strong>Frame</strong>: Container for organizing other widgets</li>
<li><strong>Checkbutton</strong>: On/off toggle</li>
<li><strong>Radiobutton</strong>: One-of-many selection</li>
<li><strong>Listbox</strong>: List of selectable items</li>
<li><strong>Combobox</strong>: Dropdown selection (from ttk submodule)</li>
</ul>
<p>Let&rsquo;s add a few of these to our window:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> tkinter <span style="color:#66d9ef">as</span> tk
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Tk()
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Finance Calculator&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;400x300&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)  <span style="color:#75715e"># Add some padding</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create a label</span>
</span></span><span style="display:flex;"><span>header <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Investment Calculator&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">16</span>, <span style="color:#e6db74">&#34;bold&#34;</span>))
</span></span><span style="display:flex;"><span>header<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create an entry field with a label</span>
</span></span><span style="display:flex;"><span>amount_frame <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Frame(root)
</span></span><span style="display:flex;"><span>amount_frame<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;x&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>amount_label <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Label(amount_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Initial Investment ($):&#34;</span>, width<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, anchor<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>)
</span></span><span style="display:flex;"><span>amount_label<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;left&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>amount_entry <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Entry(amount_frame)
</span></span><span style="display:flex;"><span>amount_entry<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;left&#34;</span>, expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;x&#34;</span>)
</span></span><span style="display:flex;"><span>amount_entry<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;1000&#34;</span>)  <span style="color:#75715e"># Default value</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add a button</span>
</span></span><span style="display:flex;"><span>calculate_button <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Button(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Calculate Returns&#34;</span>)
</span></span><span style="display:flex;"><span>calculate_button<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>mainloop()
</span></span></code></pre></div><p>Now we&rsquo;re getting somewhere! This code creates:</p>
<ul>
<li>A header label with larger, bold text</li>
<li>A frame containing a label and entry field side-by-side</li>
<li>A button (which doesn&rsquo;t do anything yet)</li>
</ul>
<h2 id="layout-management">Layout Management</h2>
<p>You may have noticed I used <code>.pack()</code> to position the widgets. This is one of three layout managers in Tkinter:</p>
<h3 id="1-pack">1. Pack</h3>
<p>The simplest layout manager. It packs widgets one after another, either vertically (default) or horizontally.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>widget<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;top&#34;</span>)  <span style="color:#75715e"># Options: &#34;top&#34;, &#34;bottom&#34;, &#34;left&#34;, &#34;right&#34;</span>
</span></span></code></pre></div><p>Useful options:</p>
<ul>
<li><code>fill</code>: Can be &ldquo;x&rdquo;, &ldquo;y&rdquo;, or &ldquo;both&rdquo; to make the widget expand</li>
<li><code>expand</code>: Boolean that determines if the widget should claim extra space</li>
<li><code>padx</code>, <code>pady</code>: Add external padding around the widget</li>
</ul>
<h3 id="2-grid">2. Grid</h3>
<p>More flexible, allows positioning in a table-like grid:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>widget<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>)
</span></span></code></pre></div><p>Useful options:</p>
<ul>
<li><code>rowspan</code>, <code>columnspan</code>: Make a widget span multiple cells</li>
<li><code>sticky</code>: Align widget within its cell (&ldquo;n&rdquo;, &ldquo;s&rdquo;, &ldquo;e&rdquo;, &ldquo;w&rdquo; or combinations)</li>
<li><code>padx</code>, <code>pady</code>: Add padding around the widget</li>
</ul>
<h3 id="3-place">3. Place</h3>
<p>Gives absolute positioning control:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>widget<span style="color:#f92672">.</span>place(x<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>, y<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>, width<span style="color:#f92672">=</span><span style="color:#ae81ff">100</span>, height<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>)
</span></span></code></pre></div><p>Most Tkinter applications use either pack or grid. Let&rsquo;s rewrite our example using grid:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> tkinter <span style="color:#66d9ef">as</span> tk
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Tk()
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Finance Calculator&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;500x400&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Header</span>
</span></span><span style="display:flex;"><span>header <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Investment Calculator&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">16</span>, <span style="color:#e6db74">&#34;bold&#34;</span>))
</span></span><span style="display:flex;"><span>header<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Initial Investment</span>
</span></span><span style="display:flex;"><span>tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Initial Investment ($):&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>initial_investment <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Entry(root)
</span></span><span style="display:flex;"><span>initial_investment<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>initial_investment<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;1000&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Annual Contribution</span>
</span></span><span style="display:flex;"><span>tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Annual Contribution ($):&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>annual_contribution <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Entry(root)
</span></span><span style="display:flex;"><span>annual_contribution<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>annual_contribution<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;0&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Interest Rate</span>
</span></span><span style="display:flex;"><span>tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Expected Return (%):&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>interest_rate <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Entry(root)
</span></span><span style="display:flex;"><span>interest_rate<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>interest_rate<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;7&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Time Period</span>
</span></span><span style="display:flex;"><span>tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Years:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">4</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>years <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Entry(root)
</span></span><span style="display:flex;"><span>years<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">4</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>years<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;10&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Calculate Button</span>
</span></span><span style="display:flex;"><span>calculate_button <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Button(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Calculate Returns&#34;</span>)
</span></span><span style="display:flex;"><span>calculate_button<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Results Label</span>
</span></span><span style="display:flex;"><span>result_label <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Future Value: $0.00&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">12</span>))
</span></span><span style="display:flex;"><span>result_label<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">6</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Configure grid columns to resize</span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>grid_columnconfigure(<span style="color:#ae81ff">1</span>, weight<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>mainloop()
</span></span></code></pre></div><p>This creates a more structured form with labels on the left and entry fields on the right.</p>
<h2 id="adding-functionality-with-event-handlers">Adding Functionality with Event Handlers</h2>
<p>Now let&rsquo;s make our calculator actually do something when you click the button. We&rsquo;ll add an event handler:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> tkinter <span style="color:#66d9ef">as</span> tk
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> tkinter <span style="color:#f92672">import</span> messagebox
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> locale
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Set locale for currency formatting</span>
</span></span><span style="display:flex;"><span>locale<span style="color:#f92672">.</span>setlocale(locale<span style="color:#f92672">.</span>LC_ALL, <span style="color:#e6db74">&#39;&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">calculate_investment</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Get values from entry fields</span>
</span></span><span style="display:flex;"><span>        initial <span style="color:#f92672">=</span> float(initial_investment<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>        annual <span style="color:#f92672">=</span> float(annual_contribution<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>        rate <span style="color:#f92672">=</span> float(interest_rate<span style="color:#f92672">.</span>get()) <span style="color:#f92672">/</span> <span style="color:#ae81ff">100</span>  <span style="color:#75715e"># Convert percentage to decimal</span>
</span></span><span style="display:flex;"><span>        time <span style="color:#f92672">=</span> int(years<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Calculate compound interest with annual additions</span>
</span></span><span style="display:flex;"><span>        future_value <span style="color:#f92672">=</span> initial <span style="color:#f92672">*</span> (<span style="color:#ae81ff">1</span> <span style="color:#f92672">+</span> rate) <span style="color:#f92672">**</span> time
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add effect of annual contributions</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> annual <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span> <span style="color:#f92672">and</span> rate <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>:
</span></span><span style="display:flex;"><span>            future_value <span style="color:#f92672">+=</span> annual <span style="color:#f92672">*</span> ((<span style="color:#ae81ff">1</span> <span style="color:#f92672">+</span> rate) <span style="color:#f92672">**</span> time <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>) <span style="color:#f92672">/</span> rate
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Update result label with formatted currency</span>
</span></span><span style="display:flex;"><span>        formatted_value <span style="color:#f92672">=</span> locale<span style="color:#f92672">.</span>currency(future_value, grouping<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>        result_label<span style="color:#f92672">.</span>config(text<span style="color:#f92672">=</span><span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Future Value: </span><span style="color:#e6db74">{</span>formatted_value<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create detailed breakdown</span>
</span></span><span style="display:flex;"><span>        show_breakdown(initial, annual, rate, time, future_value)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">ValueError</span>:
</span></span><span style="display:flex;"><span>        messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Input Error&#34;</span>, <span style="color:#e6db74">&#34;Please enter valid numbers in all fields&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">show_breakdown</span>(initial, annual, rate, time, final):
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Create a new window for the breakdown</span>
</span></span><span style="display:flex;"><span>    breakdown <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Toplevel(root)
</span></span><span style="display:flex;"><span>    breakdown<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Investment Breakdown&#34;</span>)
</span></span><span style="display:flex;"><span>    breakdown<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;400x300&#34;</span>)
</span></span><span style="display:flex;"><span>    breakdown<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Add a heading</span>
</span></span><span style="display:flex;"><span>    tk<span style="color:#f92672">.</span>Label(breakdown, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Year-by-Year Breakdown&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">12</span>, <span style="color:#e6db74">&#34;bold&#34;</span>))<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Create text widget for the breakdown</span>
</span></span><span style="display:flex;"><span>    text <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Text(breakdown, width<span style="color:#f92672">=</span><span style="color:#ae81ff">40</span>, height<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>    text<span style="color:#f92672">.</span>pack(expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Add scrollbar</span>
</span></span><span style="display:flex;"><span>    scrollbar <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Scrollbar(text)
</span></span><span style="display:flex;"><span>    scrollbar<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;right&#34;</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;y&#34;</span>)
</span></span><span style="display:flex;"><span>    text<span style="color:#f92672">.</span>config(yscrollcommand<span style="color:#f92672">=</span>scrollbar<span style="color:#f92672">.</span>set)
</span></span><span style="display:flex;"><span>    scrollbar<span style="color:#f92672">.</span>config(command<span style="color:#f92672">=</span>text<span style="color:#f92672">.</span>yview)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Insert header</span>
</span></span><span style="display:flex;"><span>    text<span style="color:#f92672">.</span>insert(<span style="color:#e6db74">&#34;end&#34;</span>, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span><span style="color:#e6db74">&#39;Year&#39;</span><span style="color:#e6db74">:</span><span style="color:#e6db74">&lt;6</span><span style="color:#e6db74">}{</span><span style="color:#e6db74">&#39;Balance&#39;</span><span style="color:#e6db74">:</span><span style="color:#e6db74">&lt;15</span><span style="color:#e6db74">}{</span><span style="color:#e6db74">&#39;Interest&#39;</span><span style="color:#e6db74">:</span><span style="color:#e6db74">&lt;15</span><span style="color:#e6db74">}{</span><span style="color:#e6db74">&#39;Total&#39;</span><span style="color:#e6db74">:</span><span style="color:#e6db74">&lt;15</span><span style="color:#e6db74">}</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>    text<span style="color:#f92672">.</span>insert(<span style="color:#e6db74">&#34;end&#34;</span>, <span style="color:#e6db74">&#34;-&#34;</span> <span style="color:#f92672">*</span> <span style="color:#ae81ff">50</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Calculate and insert year-by-year breakdown</span>
</span></span><span style="display:flex;"><span>    current_value <span style="color:#f92672">=</span> initial
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> year <span style="color:#f92672">in</span> range(<span style="color:#ae81ff">1</span>, time <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>):
</span></span><span style="display:flex;"><span>        interest <span style="color:#f92672">=</span> current_value <span style="color:#f92672">*</span> rate
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> year <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">1</span>:  <span style="color:#75715e"># Add annual contribution except for first year</span>
</span></span><span style="display:flex;"><span>            current_value <span style="color:#f92672">+=</span> annual
</span></span><span style="display:flex;"><span>        current_value <span style="color:#f92672">+=</span> interest
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        text<span style="color:#f92672">.</span>insert(<span style="color:#e6db74">&#34;end&#34;</span>, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span>year<span style="color:#e6db74">:</span><span style="color:#e6db74">&lt;6</span><span style="color:#e6db74">}{</span>locale<span style="color:#f92672">.</span>currency(current_value <span style="color:#f92672">-</span> interest, grouping<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)<span style="color:#e6db74">:</span><span style="color:#e6db74">&lt;15</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>        text<span style="color:#f92672">.</span>insert(<span style="color:#e6db74">&#34;end&#34;</span>, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span>locale<span style="color:#f92672">.</span>currency(interest, grouping<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)<span style="color:#e6db74">:</span><span style="color:#e6db74">&lt;15</span><span style="color:#e6db74">}{</span>locale<span style="color:#f92672">.</span>currency(current_value, grouping<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)<span style="color:#e6db74">:</span><span style="color:#e6db74">&lt;15</span><span style="color:#e6db74">}</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Make text widget read-only</span>
</span></span><span style="display:flex;"><span>    text<span style="color:#f92672">.</span>config(state<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;disabled&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Tk()
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Investment Calculator&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;500x400&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Header</span>
</span></span><span style="display:flex;"><span>header <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Investment Calculator&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">16</span>, <span style="color:#e6db74">&#34;bold&#34;</span>))
</span></span><span style="display:flex;"><span>header<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Initial Investment</span>
</span></span><span style="display:flex;"><span>tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Initial Investment ($):&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>initial_investment <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Entry(root)
</span></span><span style="display:flex;"><span>initial_investment<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>initial_investment<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;1000&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Annual Contribution</span>
</span></span><span style="display:flex;"><span>tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Annual Contribution ($):&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>annual_contribution <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Entry(root)
</span></span><span style="display:flex;"><span>annual_contribution<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>annual_contribution<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;0&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Interest Rate</span>
</span></span><span style="display:flex;"><span>tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Expected Return (%):&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>interest_rate <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Entry(root)
</span></span><span style="display:flex;"><span>interest_rate<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>interest_rate<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;7&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Time Period</span>
</span></span><span style="display:flex;"><span>tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Years:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">4</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>years <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Entry(root)
</span></span><span style="display:flex;"><span>years<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">4</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>years<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;10&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Calculate Button</span>
</span></span><span style="display:flex;"><span>calculate_button <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Button(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Calculate Returns&#34;</span>, command<span style="color:#f92672">=</span>calculate_investment)
</span></span><span style="display:flex;"><span>calculate_button<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Results Label</span>
</span></span><span style="display:flex;"><span>result_label <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Future Value: $0.00&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">12</span>))
</span></span><span style="display:flex;"><span>result_label<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">6</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Configure grid columns to resize</span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>grid_columnconfigure(<span style="color:#ae81ff">1</span>, weight<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>mainloop()
</span></span></code></pre></div><p>Now we&rsquo;ve added:</p>
<ol>
<li>A <code>calculate_investment()</code> function that runs when the button is clicked</li>
<li>Input validation with error handling</li>
<li>A detailed year-by-year breakdown in a separate window</li>
<li>Connected the button to the function using the <code>command</code> parameter</li>
</ol>
<h2 id="styling-and-polish">Styling and Polish</h2>
<p>Tkinter&rsquo;s default appearance is&hellip; functional, but not particularly attractive. Let&rsquo;s add some styling:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> tkinter <span style="color:#66d9ef">as</span> tk
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> tkinter <span style="color:#f92672">import</span> ttk, messagebox
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> locale
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Set locale for currency formatting</span>
</span></span><span style="display:flex;"><span>locale<span style="color:#f92672">.</span>setlocale(locale<span style="color:#f92672">.</span>LC_ALL, <span style="color:#e6db74">&#39;&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">calculate_investment</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Get values from entry fields</span>
</span></span><span style="display:flex;"><span>        initial <span style="color:#f92672">=</span> float(initial_investment<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>        annual <span style="color:#f92672">=</span> float(annual_contribution<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>        rate <span style="color:#f92672">=</span> float(interest_rate<span style="color:#f92672">.</span>get()) <span style="color:#f92672">/</span> <span style="color:#ae81ff">100</span>  <span style="color:#75715e"># Convert percentage to decimal</span>
</span></span><span style="display:flex;"><span>        time <span style="color:#f92672">=</span> int(years<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Calculate compound interest with annual additions</span>
</span></span><span style="display:flex;"><span>        future_value <span style="color:#f92672">=</span> initial <span style="color:#f92672">*</span> (<span style="color:#ae81ff">1</span> <span style="color:#f92672">+</span> rate) <span style="color:#f92672">**</span> time
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add effect of annual contributions</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> annual <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span> <span style="color:#f92672">and</span> rate <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>:
</span></span><span style="display:flex;"><span>            future_value <span style="color:#f92672">+=</span> annual <span style="color:#f92672">*</span> ((<span style="color:#ae81ff">1</span> <span style="color:#f92672">+</span> rate) <span style="color:#f92672">**</span> time <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>) <span style="color:#f92672">/</span> rate
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Update result label with formatted currency</span>
</span></span><span style="display:flex;"><span>        formatted_value <span style="color:#f92672">=</span> locale<span style="color:#f92672">.</span>currency(future_value, grouping<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>        result_label<span style="color:#f92672">.</span>config(text<span style="color:#f92672">=</span><span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Future Value: </span><span style="color:#e6db74">{</span>formatted_value<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Show breakdown button</span>
</span></span><span style="display:flex;"><span>        breakdown_button<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">7</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Store values for breakdown</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">global</span> investment_data
</span></span><span style="display:flex;"><span>        investment_data <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;initial&#34;</span>: initial,
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;annual&#34;</span>: annual,
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;rate&#34;</span>: rate,
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;time&#34;</span>: time,
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;final&#34;</span>: future_value
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">ValueError</span>:
</span></span><span style="display:flex;"><span>        messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Input Error&#34;</span>, <span style="color:#e6db74">&#34;Please enter valid numbers in all fields&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">show_breakdown</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Create a new window for the breakdown</span>
</span></span><span style="display:flex;"><span>    breakdown <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Toplevel(root)
</span></span><span style="display:flex;"><span>    breakdown<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Investment Breakdown&#34;</span>)
</span></span><span style="display:flex;"><span>    breakdown<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;600x400&#34;</span>)
</span></span><span style="display:flex;"><span>    breakdown<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Add a heading</span>
</span></span><span style="display:flex;"><span>    tk<span style="color:#f92672">.</span>Label(breakdown, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Year-by-Year Breakdown&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">12</span>, <span style="color:#e6db74">&#34;bold&#34;</span>))<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Create a frame for the table</span>
</span></span><span style="display:flex;"><span>    table_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(breakdown)
</span></span><span style="display:flex;"><span>    table_frame<span style="color:#f92672">.</span>pack(expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Create treeview (table)</span>
</span></span><span style="display:flex;"><span>    columns <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;Year&#34;</span>, <span style="color:#e6db74">&#34;Starting Balance&#34;</span>, <span style="color:#e6db74">&#34;Interest Earned&#34;</span>, <span style="color:#e6db74">&#34;Contribution&#34;</span>, <span style="color:#e6db74">&#34;Ending Balance&#34;</span>)
</span></span><span style="display:flex;"><span>    table <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Treeview(table_frame, columns<span style="color:#f92672">=</span>columns, show<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;headings&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Configure columns</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> col <span style="color:#f92672">in</span> columns:
</span></span><span style="display:flex;"><span>        table<span style="color:#f92672">.</span>heading(col, text<span style="color:#f92672">=</span>col)
</span></span><span style="display:flex;"><span>        table<span style="color:#f92672">.</span>column(col, width<span style="color:#f92672">=</span><span style="color:#ae81ff">100</span>, anchor<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;center&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Add scrollbar</span>
</span></span><span style="display:flex;"><span>    scrollbar <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Scrollbar(table_frame, orient<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;vertical&#34;</span>, command<span style="color:#f92672">=</span>table<span style="color:#f92672">.</span>yview)
</span></span><span style="display:flex;"><span>    scrollbar<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;right&#34;</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;y&#34;</span>)
</span></span><span style="display:flex;"><span>    table<span style="color:#f92672">.</span>configure(yscrollcommand<span style="color:#f92672">=</span>scrollbar<span style="color:#f92672">.</span>set)
</span></span><span style="display:flex;"><span>    table<span style="color:#f92672">.</span>pack(expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Extract values from stored data</span>
</span></span><span style="display:flex;"><span>    initial <span style="color:#f92672">=</span> investment_data[<span style="color:#e6db74">&#34;initial&#34;</span>]
</span></span><span style="display:flex;"><span>    annual <span style="color:#f92672">=</span> investment_data[<span style="color:#e6db74">&#34;annual&#34;</span>]
</span></span><span style="display:flex;"><span>    rate <span style="color:#f92672">=</span> investment_data[<span style="color:#e6db74">&#34;rate&#34;</span>]
</span></span><span style="display:flex;"><span>    time <span style="color:#f92672">=</span> investment_data[<span style="color:#e6db74">&#34;time&#34;</span>]
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Calculate and insert year-by-year breakdown</span>
</span></span><span style="display:flex;"><span>    current_value <span style="color:#f92672">=</span> initial
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> year <span style="color:#f92672">in</span> range(<span style="color:#ae81ff">1</span>, time <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>):
</span></span><span style="display:flex;"><span>        starting_balance <span style="color:#f92672">=</span> current_value
</span></span><span style="display:flex;"><span>        interest <span style="color:#f92672">=</span> current_value <span style="color:#f92672">*</span> rate
</span></span><span style="display:flex;"><span>        contribution <span style="color:#f92672">=</span> annual <span style="color:#66d9ef">if</span> year <span style="color:#f92672">&lt;</span> time <span style="color:#66d9ef">else</span> <span style="color:#ae81ff">0</span>  <span style="color:#75715e"># No contribution in final year calculation</span>
</span></span><span style="display:flex;"><span>        current_value <span style="color:#f92672">=</span> starting_balance <span style="color:#f92672">+</span> interest <span style="color:#f92672">+</span> contribution
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Format values as currency</span>
</span></span><span style="display:flex;"><span>        formatted_starting <span style="color:#f92672">=</span> locale<span style="color:#f92672">.</span>currency(starting_balance, grouping<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>        formatted_interest <span style="color:#f92672">=</span> locale<span style="color:#f92672">.</span>currency(interest, grouping<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>        formatted_contribution <span style="color:#f92672">=</span> locale<span style="color:#f92672">.</span>currency(contribution, grouping<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>        formatted_ending <span style="color:#f92672">=</span> locale<span style="color:#f92672">.</span>currency(current_value, grouping<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add row to table</span>
</span></span><span style="display:flex;"><span>        table<span style="color:#f92672">.</span>insert(<span style="color:#e6db74">&#34;&#34;</span>, <span style="color:#e6db74">&#34;end&#34;</span>, values<span style="color:#f92672">=</span>(year, formatted_starting, formatted_interest, 
</span></span><span style="display:flex;"><span>                                        formatted_contribution, formatted_ending))
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Add a button to generate a chart</span>
</span></span><span style="display:flex;"><span>    chart_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(breakdown, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Generate Chart&#34;</span>, command<span style="color:#f92672">=</span><span style="color:#66d9ef">lambda</span>: show_chart(time))
</span></span><span style="display:flex;"><span>    chart_button<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">show_chart</span>(years):
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># This would normally use matplotlib for charting</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Since we can&#39;t include matplotlib in this basic example, we&#39;ll show a message</span>
</span></span><span style="display:flex;"><span>    messagebox<span style="color:#f92672">.</span>showinfo(<span style="color:#e6db74">&#34;Chart Generation&#34;</span>, 
</span></span><span style="display:flex;"><span>                        <span style="color:#e6db74">&#34;In a real application, this would generate a matplotlib chart showing growth over time.</span><span style="color:#ae81ff">\n\n</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>                        <span style="color:#e6db74">&#34;To implement this, you would:</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>                        <span style="color:#e6db74">&#34;1. Install matplotlib (pip install matplotlib)</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>                        <span style="color:#e6db74">&#34;2. Import matplotlib.pyplot as plt</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>                        <span style="color:#e6db74">&#34;3. Create a Figure and embed it in a Tkinter window</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>                        <span style="color:#e6db74">&#34;4. Plot the investment growth data</span><span style="color:#ae81ff">\n\n</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>                        <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Your investment would grow over </span><span style="color:#e6db74">{</span>years<span style="color:#e6db74">}</span><span style="color:#e6db74"> years.&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create main application window</span>
</span></span><span style="display:flex;"><span>root <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Tk()
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Financial Investment Calculator&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;500x450&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Use ttk theme for better looking widgets</span>
</span></span><span style="display:flex;"><span>style <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Style()
</span></span><span style="display:flex;"><span>style<span style="color:#f92672">.</span>theme_use(<span style="color:#e6db74">&#34;clam&#34;</span>)  <span style="color:#75715e"># Options: &#39;clam&#39;, &#39;alt&#39;, &#39;default&#39;, &#39;classic&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Header with a frame for visual separation</span>
</span></span><span style="display:flex;"><span>header_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(root, padding<span style="color:#f92672">=</span>(<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">10</span>))
</span></span><span style="display:flex;"><span>header_frame<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>)
</span></span><span style="display:flex;"><span>header_frame<span style="color:#f92672">.</span>grid_columnconfigure(<span style="color:#ae81ff">0</span>, weight<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>header <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Label(header_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Investment Calculator&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">16</span>))
</span></span><span style="display:flex;"><span>header<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>separator <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Separator(root, orient<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;horizontal&#34;</span>)
</span></span><span style="display:flex;"><span>separator<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Input form</span>
</span></span><span style="display:flex;"><span>form_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>LabelFrame(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Investment Parameters&#34;</span>, padding<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>form_frame<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;nsew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>form_frame<span style="color:#f92672">.</span>grid_columnconfigure(<span style="color:#ae81ff">1</span>, weight<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Initial Investment</span>
</span></span><span style="display:flex;"><span>ttk<span style="color:#f92672">.</span>Label(form_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Initial Investment ($):&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>initial_investment <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(form_frame)
</span></span><span style="display:flex;"><span>initial_investment<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>initial_investment<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;1000&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Annual Contribution</span>
</span></span><span style="display:flex;"><span>ttk<span style="color:#f92672">.</span>Label(form_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Annual Contribution ($):&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>annual_contribution <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(form_frame)
</span></span><span style="display:flex;"><span>annual_contribution<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>annual_contribution<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;0&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Interest Rate</span>
</span></span><span style="display:flex;"><span>ttk<span style="color:#f92672">.</span>Label(form_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Expected Return (%):&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>interest_rate <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(form_frame)
</span></span><span style="display:flex;"><span>interest_rate<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>interest_rate<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;7&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Time Period</span>
</span></span><span style="display:flex;"><span>ttk<span style="color:#f92672">.</span>Label(form_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Years:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>years <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(form_frame)
</span></span><span style="display:flex;"><span>years<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>years<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;10&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add some space</span>
</span></span><span style="display:flex;"><span>ttk<span style="color:#f92672">.</span>Separator(root, orient<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;horizontal&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Calculate Button</span>
</span></span><span style="display:flex;"><span>calculate_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Calculate Returns&#34;</span>, command<span style="color:#f92672">=</span>calculate_investment)
</span></span><span style="display:flex;"><span>calculate_button<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">4</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Results Label</span>
</span></span><span style="display:flex;"><span>result_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(root, padding<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>result_frame<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>result_frame<span style="color:#f92672">.</span>grid_columnconfigure(<span style="color:#ae81ff">0</span>, weight<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>result_label <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Label(result_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Future Value: $0.00&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">12</span>))
</span></span><span style="display:flex;"><span>result_label<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Breakdown button (initially hidden)</span>
</span></span><span style="display:flex;"><span>breakdown_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;View Year-by-Year Breakdown&#34;</span>, command<span style="color:#f92672">=</span>show_breakdown)
</span></span><span style="display:flex;"><span>breakdown_button<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">7</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>breakdown_button<span style="color:#f92672">.</span>grid_remove()  <span style="color:#75715e"># Hide initially</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Global variable to store calculation results</span>
</span></span><span style="display:flex;"><span>investment_data <span style="color:#f92672">=</span> {}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Configure grid expansion</span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>grid_rowconfigure(<span style="color:#ae81ff">2</span>, weight<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>grid_columnconfigure(<span style="color:#ae81ff">0</span>, weight<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>mainloop()
</span></span></code></pre></div><p>In this enhanced version, we&rsquo;ve used several more advanced features:</p>
<ol>
<li>The <code>ttk</code> module that provides themed widgets (more modern look)</li>
<li>Organizational widgets like <code>LabelFrame</code> and <code>Separator</code> for better visual structure</li>
<li>A <code>Treeview</code> widget to display tabular data in the breakdown</li>
<li>A placeholder for charting (which would normally use matplotlib)</li>
</ol>
<h2 id="packaging-your-application">Packaging Your Application</h2>
<p>Once your application is working as expected, you might want to distribute it to colleagues. Here&rsquo;s how to convert it to a standalone executable (no Python installation required):</p>
<ol>
<li>Install PyInstaller:</li>
</ol>
<pre tabindex="0"><code>pip install pyinstaller
</code></pre><ol start="2">
<li>Create your executable:</li>
</ol>
<pre tabindex="0"><code>pyinstaller --onefile --windowed investment_calculator.py
</code></pre><p>This will create a <code>dist</code> folder containing a single <code>.exe</code> file you can share.</p>
<h2 id="building-a-simple-expense-tracker">Building a Simple Expense Tracker</h2>
<p>Let&rsquo;s create another finance-related application: a basic expense tracker. This will introduce a few new Tkinter concepts:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> tkinter <span style="color:#66d9ef">as</span> tk
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> tkinter <span style="color:#f92672">import</span> ttk, messagebox
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> json
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> os
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> datetime <span style="color:#f92672">import</span> datetime
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">ExpenseTracker</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> __init__(self, root):
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>root <span style="color:#f92672">=</span> root
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>root<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Expense Tracker&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>root<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;800x600&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>root<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Data storage</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>expenses <span style="color:#f92672">=</span> []
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>data_file <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;expenses.json&#34;</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>load_data()
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create UI</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>create_widgets()
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">create_widgets</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Main container</span>
</span></span><span style="display:flex;"><span>        main_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(self<span style="color:#f92672">.</span>root)
</span></span><span style="display:flex;"><span>        main_frame<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>, expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Left panel - Add Expense</span>
</span></span><span style="display:flex;"><span>        left_panel <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>LabelFrame(main_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Add New Expense&#34;</span>)
</span></span><span style="display:flex;"><span>        left_panel<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;left&#34;</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>, expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, padx<span style="color:#f92672">=</span>(<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">10</span>), pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Date selector</span>
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(left_panel, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Date:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>date_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(left_panel)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>date_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>date_entry<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, datetime<span style="color:#f92672">.</span>now()<span style="color:#f92672">.</span>strftime(<span style="color:#e6db74">&#34;%Y-%m-</span><span style="color:#e6db74">%d</span><span style="color:#e6db74">&#34;</span>))
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Amount entry</span>
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(left_panel, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Amount ($):&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>amount_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(left_panel)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>amount_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Category dropdown</span>
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(left_panel, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Category:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>categories <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#34;Food&#34;</span>, <span style="color:#e6db74">&#34;Transportation&#34;</span>, <span style="color:#e6db74">&#34;Housing&#34;</span>, <span style="color:#e6db74">&#34;Entertainment&#34;</span>, <span style="color:#e6db74">&#34;Utilities&#34;</span>, <span style="color:#e6db74">&#34;Other&#34;</span>]
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>category_var <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>StringVar()
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>category_dropdown <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Combobox(left_panel, textvariable<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>category_var)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>category_dropdown[<span style="color:#e6db74">&#39;values&#39;</span>] <span style="color:#f92672">=</span> self<span style="color:#f92672">.</span>categories
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>category_dropdown<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>category_dropdown<span style="color:#f92672">.</span>current(<span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Description entry</span>
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(left_panel, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Description:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>description_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(left_panel)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>description_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add button</span>
</span></span><span style="display:flex;"><span>        add_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(left_panel, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Add Expense&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>add_expense)
</span></span><span style="display:flex;"><span>        add_button<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">4</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Reporting section</span>
</span></span><span style="display:flex;"><span>        report_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(left_panel)
</span></span><span style="display:flex;"><span>        report_frame<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(report_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Total Expenses: &#34;</span>)<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;left&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>total_label <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Label(report_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;$0.00&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>total_label<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;left&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Right panel - Expense List</span>
</span></span><span style="display:flex;"><span>        right_panel <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>LabelFrame(main_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Expense History&#34;</span>)
</span></span><span style="display:flex;"><span>        right_panel<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;right&#34;</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>, expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, padx<span style="color:#f92672">=</span>(<span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">0</span>), pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create treeview</span>
</span></span><span style="display:flex;"><span>        columns <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;Date&#34;</span>, <span style="color:#e6db74">&#34;Amount&#34;</span>, <span style="color:#e6db74">&#34;Category&#34;</span>, <span style="color:#e6db74">&#34;Description&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>expense_table <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Treeview(right_panel, columns<span style="color:#f92672">=</span>columns, show<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;headings&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Configure columns</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> col <span style="color:#f92672">in</span> columns:
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>heading(col, text<span style="color:#f92672">=</span>col)
</span></span><span style="display:flex;"><span>            width <span style="color:#f92672">=</span> <span style="color:#ae81ff">150</span> <span style="color:#66d9ef">if</span> col <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;Description&#34;</span> <span style="color:#66d9ef">else</span> <span style="color:#ae81ff">100</span>
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>column(col, width<span style="color:#f92672">=</span>width)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add scrollbar</span>
</span></span><span style="display:flex;"><span>        scrollbar <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Scrollbar(right_panel, orient<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;vertical&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>yview)
</span></span><span style="display:flex;"><span>        scrollbar<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;right&#34;</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;y&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>configure(yscrollcommand<span style="color:#f92672">=</span>scrollbar<span style="color:#f92672">.</span>set)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>pack(expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add right-click menu for deleting entries</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>context_menu <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Menu(self<span style="color:#f92672">.</span>root, tearoff<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>context_menu<span style="color:#f92672">.</span>add_command(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Delete&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>delete_expense)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>bind(<span style="color:#e6db74">&#34;&lt;Button-3&gt;&#34;</span>, self<span style="color:#f92672">.</span>show_context_menu)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Configure column weights</span>
</span></span><span style="display:flex;"><span>        left_panel<span style="color:#f92672">.</span>grid_columnconfigure(<span style="color:#ae81ff">1</span>, weight<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Populate table with saved data</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>update_expense_table()
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">add_expense</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>            date <span style="color:#f92672">=</span> self<span style="color:#f92672">.</span>date_entry<span style="color:#f92672">.</span>get()
</span></span><span style="display:flex;"><span>            amount <span style="color:#f92672">=</span> float(self<span style="color:#f92672">.</span>amount_entry<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>            category <span style="color:#f92672">=</span> self<span style="color:#f92672">.</span>category_var<span style="color:#f92672">.</span>get()
</span></span><span style="display:flex;"><span>            description <span style="color:#f92672">=</span> self<span style="color:#f92672">.</span>description_entry<span style="color:#f92672">.</span>get()
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Validate inputs</span>
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> date <span style="color:#f92672">or</span> <span style="color:#f92672">not</span> category <span style="color:#f92672">or</span> amount <span style="color:#f92672">&lt;=</span> <span style="color:#ae81ff">0</span>:
</span></span><span style="display:flex;"><span>                messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Input Error&#34;</span>, <span style="color:#e6db74">&#34;Please enter valid values for all fields.&#34;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span>
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Add to expenses list</span>
</span></span><span style="display:flex;"><span>            expense <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;date&#34;</span>: date,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;amount&#34;</span>: amount,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;category&#34;</span>: category,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;description&#34;</span>: description
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>expenses<span style="color:#f92672">.</span>append(expense)
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Save data</span>
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>save_data()
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Update UI</span>
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>update_expense_table()
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Clear inputs</span>
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>amount_entry<span style="color:#f92672">.</span>delete(<span style="color:#ae81ff">0</span>, tk<span style="color:#f92672">.</span>END)
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>description_entry<span style="color:#f92672">.</span>delete(<span style="color:#ae81ff">0</span>, tk<span style="color:#f92672">.</span>END)
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>date_entry<span style="color:#f92672">.</span>delete(<span style="color:#ae81ff">0</span>, tk<span style="color:#f92672">.</span>END)
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>date_entry<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, datetime<span style="color:#f92672">.</span>now()<span style="color:#f92672">.</span>strftime(<span style="color:#e6db74">&#34;%Y-%m-</span><span style="color:#e6db74">%d</span><span style="color:#e6db74">&#34;</span>))
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">ValueError</span>:
</span></span><span style="display:flex;"><span>            messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Input Error&#34;</span>, <span style="color:#e6db74">&#34;Please enter a valid amount.&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">update_expense_table</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Clear existing entries</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> row <span style="color:#f92672">in</span> self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>get_children():
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>delete(row)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Sort expenses by date (newest first)</span>
</span></span><span style="display:flex;"><span>        sorted_expenses <span style="color:#f92672">=</span> sorted(self<span style="color:#f92672">.</span>expenses, key<span style="color:#f92672">=</span><span style="color:#66d9ef">lambda</span> x: x[<span style="color:#e6db74">&#34;date&#34;</span>], reverse<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add expenses to table</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> expense <span style="color:#f92672">in</span> sorted_expenses:
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>insert(<span style="color:#e6db74">&#34;&#34;</span>, <span style="color:#e6db74">&#34;end&#34;</span>, values<span style="color:#f92672">=</span>(
</span></span><span style="display:flex;"><span>                expense[<span style="color:#e6db74">&#34;date&#34;</span>],
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;$</span><span style="color:#e6db74">{</span>expense[<span style="color:#e6db74">&#39;amount&#39;</span>]<span style="color:#e6db74">:</span><span style="color:#e6db74">.2f</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>,
</span></span><span style="display:flex;"><span>                expense[<span style="color:#e6db74">&#34;category&#34;</span>],
</span></span><span style="display:flex;"><span>                expense[<span style="color:#e6db74">&#34;description&#34;</span>]
</span></span><span style="display:flex;"><span>            ))
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Update total</span>
</span></span><span style="display:flex;"><span>        total <span style="color:#f92672">=</span> sum(expense[<span style="color:#e6db74">&#34;amount&#34;</span>] <span style="color:#66d9ef">for</span> expense <span style="color:#f92672">in</span> self<span style="color:#f92672">.</span>expenses)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>total_label<span style="color:#f92672">.</span>config(text<span style="color:#f92672">=</span><span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;$</span><span style="color:#e6db74">{</span>total<span style="color:#e6db74">:</span><span style="color:#e6db74">.2f</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">show_context_menu</span>(self, event):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Get the item under cursor</span>
</span></span><span style="display:flex;"><span>        item <span style="color:#f92672">=</span> self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>identify_row(event<span style="color:#f92672">.</span>y)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> item:
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>selection_set(item)
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>context_menu<span style="color:#f92672">.</span>post(event<span style="color:#f92672">.</span>x_root, event<span style="color:#f92672">.</span>y_root)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">delete_expense</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Get selected item</span>
</span></span><span style="display:flex;"><span>        selected <span style="color:#f92672">=</span> self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>selection()
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> selected:
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span>
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Confirm deletion</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> messagebox<span style="color:#f92672">.</span>askyesno(<span style="color:#e6db74">&#34;Confirm Delete&#34;</span>, <span style="color:#e6db74">&#34;Are you sure you want to delete this expense?&#34;</span>):
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Get the index from selection</span>
</span></span><span style="display:flex;"><span>            item_id <span style="color:#f92672">=</span> selected[<span style="color:#ae81ff">0</span>]
</span></span><span style="display:flex;"><span>            item_index <span style="color:#f92672">=</span> self<span style="color:#f92672">.</span>expense_table<span style="color:#f92672">.</span>index(item_id)
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Remove from data</span>
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">if</span> <span style="color:#ae81ff">0</span> <span style="color:#f92672">&lt;=</span> item_index <span style="color:#f92672">&lt;</span> len(self<span style="color:#f92672">.</span>expenses):
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>expenses<span style="color:#f92672">.</span>pop(item_index)
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>save_data()
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>update_expense_table()
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">load_data</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">if</span> os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>exists(self<span style="color:#f92672">.</span>data_file):
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">with</span> open(self<span style="color:#f92672">.</span>data_file, <span style="color:#e6db74">&#34;r&#34;</span>) <span style="color:#66d9ef">as</span> file:
</span></span><span style="display:flex;"><span>                    self<span style="color:#f92672">.</span>expenses <span style="color:#f92672">=</span> json<span style="color:#f92672">.</span>load(file)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">Exception</span> <span style="color:#66d9ef">as</span> e:
</span></span><span style="display:flex;"><span>            messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Data Error&#34;</span>, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Error loading data: </span><span style="color:#e6db74">{</span>str(e)<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>expenses <span style="color:#f92672">=</span> []
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">save_data</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">with</span> open(self<span style="color:#f92672">.</span>data_file, <span style="color:#e6db74">&#34;w&#34;</span>) <span style="color:#66d9ef">as</span> file:
</span></span><span style="display:flex;"><span>                json<span style="color:#f92672">.</span>dump(self<span style="color:#f92672">.</span>expenses, file, indent<span style="color:#f92672">=</span><span style="color:#ae81ff">4</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">Exception</span> <span style="color:#66d9ef">as</span> e:
</span></span><span style="display:flex;"><span>            messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Data Error&#34;</span>, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Error saving data: </span><span style="color:#e6db74">{</span>str(e)<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create and run the application</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> __name__ <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;__main__&#34;</span>:
</span></span><span style="display:flex;"><span>    root <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Tk()
</span></span><span style="display:flex;"><span>    app <span style="color:#f92672">=</span> ExpenseTracker(root)
</span></span><span style="display:flex;"><span>    root<span style="color:#f92672">.</span>mainloop()
</span></span></code></pre></div><p>This expense tracker application introduces several new concepts:</p>
<ol>
<li><strong>Object-Oriented Approach</strong>: Using a class to organize the application</li>
<li><strong>Combobox Widget</strong>: For selecting from a predefined list</li>
<li><strong>Context Menu</strong>: Right-click menu for actions like deletion</li>
<li><strong>Data Persistence</strong>: Saving/loading data to/from a JSON file</li>
<li><strong>Event Binding</strong>: Connecting events (like right-click) to handlers</li>
</ol>
<h2 id="advanced-tkinter-topics">Advanced Tkinter Topics</h2>
<p>If you want to take your Tkinter applications further, here are some advanced topics worth exploring:</p>
<h3 id="1-custom-styling-with-themes">1. Custom Styling with Themes</h3>
<p>The <code>ttk</code> module (themed Tkinter) supports customization through themes. You can create a custom look for your application:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> tkinter <span style="color:#66d9ef">as</span> tk
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> tkinter <span style="color:#f92672">import</span> ttk
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Tk()
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Custom Styled App&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Get the default style object</span>
</span></span><span style="display:flex;"><span>style <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Style()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Change the theme</span>
</span></span><span style="display:flex;"><span>style<span style="color:#f92672">.</span>theme_use(<span style="color:#e6db74">&#39;clam&#39;</span>)  <span style="color:#75715e"># Options include: &#39;clam&#39;, &#39;alt&#39;, &#39;default&#39;, &#39;classic&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Configure specific elements</span>
</span></span><span style="display:flex;"><span>style<span style="color:#f92672">.</span>configure(<span style="color:#e6db74">&#39;TButton&#39;</span>, 
</span></span><span style="display:flex;"><span>                foreground<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;navy&#39;</span>,
</span></span><span style="display:flex;"><span>                background<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;lightblue&#39;</span>, 
</span></span><span style="display:flex;"><span>                font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#39;Arial&#39;</span>, <span style="color:#ae81ff">11</span>, <span style="color:#e6db74">&#39;bold&#39;</span>),
</span></span><span style="display:flex;"><span>                padding<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>style<span style="color:#f92672">.</span>configure(<span style="color:#e6db74">&#39;TLabel&#39;</span>,
</span></span><span style="display:flex;"><span>                font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#39;Arial&#39;</span>, <span style="color:#ae81ff">12</span>),
</span></span><span style="display:flex;"><span>                padding<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create a custom style for specific widgets</span>
</span></span><span style="display:flex;"><span>style<span style="color:#f92672">.</span>configure(<span style="color:#e6db74">&#39;Danger.TButton&#39;</span>,
</span></span><span style="display:flex;"><span>                foreground<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;white&#39;</span>,
</span></span><span style="display:flex;"><span>                background<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;red&#39;</span>,
</span></span><span style="display:flex;"><span>                font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#39;Arial&#39;</span>, <span style="color:#ae81ff">11</span>, <span style="color:#e6db74">&#39;bold&#39;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Using the styles</span>
</span></span><span style="display:flex;"><span>normal_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Normal Button&#34;</span>)
</span></span><span style="display:flex;"><span>normal_button<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>danger_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Delete&#34;</span>, style<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;Danger.TButton&#39;</span>)
</span></span><span style="display:flex;"><span>danger_button<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>mainloop()
</span></span></code></pre></div><p>This just scratches the surface. You can define custom styles for almost every widget property, though note that not all styling options work the same across different operating systems.</p>
<h3 id="2-canvas-widget-for-custom-graphics">2. Canvas Widget for Custom Graphics</h3>
<p>For more complex visualizations, the <code>Canvas</code> widget provides a drawing surface:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> tkinter <span style="color:#66d9ef">as</span> tk
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> math
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Tk()
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Financial Pie Chart&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;400x400&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create a canvas</span>
</span></span><span style="display:flex;"><span>canvas <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Canvas(root, width<span style="color:#f92672">=</span><span style="color:#ae81ff">300</span>, height<span style="color:#f92672">=</span><span style="color:#ae81ff">300</span>, bg<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;white&#39;</span>)
</span></span><span style="display:flex;"><span>canvas<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Sample data (expense categories and values)</span>
</span></span><span style="display:flex;"><span>expenses <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;Housing&#34;</span>: <span style="color:#ae81ff">1200</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;Food&#34;</span>: <span style="color:#ae81ff">500</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;Transportation&#34;</span>: <span style="color:#ae81ff">300</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;Entertainment&#34;</span>: <span style="color:#ae81ff">200</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;Utilities&#34;</span>: <span style="color:#ae81ff">250</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;Other&#34;</span>: <span style="color:#ae81ff">150</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Calculate total</span>
</span></span><span style="display:flex;"><span>total <span style="color:#f92672">=</span> sum(expenses<span style="color:#f92672">.</span>values())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Define colors</span>
</span></span><span style="display:flex;"><span>colors <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;#ff9999&#39;</span>, <span style="color:#e6db74">&#39;#66b3ff&#39;</span>, <span style="color:#e6db74">&#39;#99ff99&#39;</span>, <span style="color:#e6db74">&#39;#ffcc99&#39;</span>, <span style="color:#e6db74">&#39;#c2c2f0&#39;</span>, <span style="color:#e6db74">&#39;#ffb3e6&#39;</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Draw pie chart</span>
</span></span><span style="display:flex;"><span>cx, cy, r <span style="color:#f92672">=</span> <span style="color:#ae81ff">150</span>, <span style="color:#ae81ff">150</span>, <span style="color:#ae81ff">100</span>  <span style="color:#75715e"># center x, center y, radius</span>
</span></span><span style="display:flex;"><span>start_angle <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> i, (category, value) <span style="color:#f92672">in</span> enumerate(expenses<span style="color:#f92672">.</span>items()):
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Calculate angle for this segment</span>
</span></span><span style="display:flex;"><span>    angle <span style="color:#f92672">=</span> <span style="color:#ae81ff">360</span> <span style="color:#f92672">*</span> (value <span style="color:#f92672">/</span> total)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Convert to radians for math functions</span>
</span></span><span style="display:flex;"><span>    end_angle <span style="color:#f92672">=</span> start_angle <span style="color:#f92672">+</span> angle
</span></span><span style="display:flex;"><span>    start_rad <span style="color:#f92672">=</span> math<span style="color:#f92672">.</span>radians(start_angle)
</span></span><span style="display:flex;"><span>    end_rad <span style="color:#f92672">=</span> math<span style="color:#f92672">.</span>radians(end_angle)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Create the arc/slice</span>
</span></span><span style="display:flex;"><span>    canvas<span style="color:#f92672">.</span>create_arc(cx<span style="color:#f92672">-</span>r, cy<span style="color:#f92672">-</span>r, cx<span style="color:#f92672">+</span>r, cy<span style="color:#f92672">+</span>r, 
</span></span><span style="display:flex;"><span>                     start<span style="color:#f92672">=</span>start_angle, extent<span style="color:#f92672">=</span>angle,
</span></span><span style="display:flex;"><span>                     fill<span style="color:#f92672">=</span>colors[i <span style="color:#f92672">%</span> len(colors)], outline<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;white&#39;</span>, width<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Calculate position for label</span>
</span></span><span style="display:flex;"><span>    mid_rad <span style="color:#f92672">=</span> math<span style="color:#f92672">.</span>radians(start_angle <span style="color:#f92672">+</span> angle<span style="color:#f92672">/</span><span style="color:#ae81ff">2</span>)
</span></span><span style="display:flex;"><span>    label_r <span style="color:#f92672">=</span> r <span style="color:#f92672">*</span> <span style="color:#ae81ff">0.7</span>  <span style="color:#75715e"># Place label at 70% of radius</span>
</span></span><span style="display:flex;"><span>    label_x <span style="color:#f92672">=</span> cx <span style="color:#f92672">+</span> label_r <span style="color:#f92672">*</span> math<span style="color:#f92672">.</span>cos(mid_rad)
</span></span><span style="display:flex;"><span>    label_y <span style="color:#f92672">=</span> cy <span style="color:#f92672">+</span> label_r <span style="color:#f92672">*</span> math<span style="color:#f92672">.</span>sin(mid_rad)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Draw label</span>
</span></span><span style="display:flex;"><span>    canvas<span style="color:#f92672">.</span>create_text(label_x, label_y, text<span style="color:#f92672">=</span><span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span>category<span style="color:#e6db74">}</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">{</span>value<span style="color:#f92672">/</span>total<span style="color:#e6db74">:</span><span style="color:#e6db74">.1%</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>, 
</span></span><span style="display:flex;"><span>                      font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">8</span>), fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;black&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Move to next segment</span>
</span></span><span style="display:flex;"><span>    start_angle <span style="color:#f92672">=</span> end_angle
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add a title</span>
</span></span><span style="display:flex;"><span>canvas<span style="color:#f92672">.</span>create_text(cx, <span style="color:#ae81ff">30</span>, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Monthly Expenses&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">16</span>, <span style="color:#e6db74">&#34;bold&#34;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>mainloop()
</span></span></code></pre></div><p>The Canvas widget can be used for all kinds of custom graphics, from charts and graphs to custom UI elements and even simple animations.</p>
<h3 id="3-multithreading-for-long-running-tasks">3. Multithreading for Long-Running Tasks</h3>
<p>When performing calculations or operations that might take time, you should use threading to keep the UI responsive:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> tkinter <span style="color:#66d9ef">as</span> tk
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> tkinter <span style="color:#f92672">import</span> ttk
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> threading
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> time
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">long_running_task</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Simulate a complex calculation or API call</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(<span style="color:#ae81ff">10</span>):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Update progress from the worker thread</span>
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Note: we use root.after to schedule UI updates from the main thread</span>
</span></span><span style="display:flex;"><span>        progress_var <span style="color:#f92672">=</span> (i <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>) <span style="color:#f92672">*</span> <span style="color:#ae81ff">10</span>
</span></span><span style="display:flex;"><span>        root<span style="color:#f92672">.</span>after(<span style="color:#ae81ff">0</span>, progress_bar<span style="color:#f92672">.</span>config, {<span style="color:#e6db74">&#34;value&#34;</span>: progress_var})
</span></span><span style="display:flex;"><span>        root<span style="color:#f92672">.</span>after(<span style="color:#ae81ff">0</span>, progress_label<span style="color:#f92672">.</span>config, {<span style="color:#e6db74">&#34;text&#34;</span>: <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Processing: </span><span style="color:#e6db74">{</span>progress_var<span style="color:#e6db74">}</span><span style="color:#e6db74">%&#34;</span>})
</span></span><span style="display:flex;"><span>        time<span style="color:#f92672">.</span>sleep(<span style="color:#ae81ff">0.5</span>)  <span style="color:#75715e"># Simulate work</span>
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Enable the button when done</span>
</span></span><span style="display:flex;"><span>    root<span style="color:#f92672">.</span>after(<span style="color:#ae81ff">0</span>, calculate_button<span style="color:#f92672">.</span>config, {<span style="color:#e6db74">&#34;state&#34;</span>: <span style="color:#e6db74">&#34;normal&#34;</span>})
</span></span><span style="display:flex;"><span>    root<span style="color:#f92672">.</span>after(<span style="color:#ae81ff">0</span>, progress_label<span style="color:#f92672">.</span>config, {<span style="color:#e6db74">&#34;text&#34;</span>: <span style="color:#e6db74">&#34;Calculation complete!&#34;</span>})
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">start_calculation</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Disable button during calculation</span>
</span></span><span style="display:flex;"><span>    calculate_button<span style="color:#f92672">.</span>config(state<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;disabled&#34;</span>)
</span></span><span style="display:flex;"><span>    progress_label<span style="color:#f92672">.</span>config(text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Starting calculation...&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Start the task in a separate thread</span>
</span></span><span style="display:flex;"><span>    thread <span style="color:#f92672">=</span> threading<span style="color:#f92672">.</span>Thread(target<span style="color:#f92672">=</span>long_running_task)
</span></span><span style="display:flex;"><span>    thread<span style="color:#f92672">.</span>daemon <span style="color:#f92672">=</span> <span style="color:#66d9ef">True</span>  <span style="color:#75715e"># Thread will exit when main program exits</span>
</span></span><span style="display:flex;"><span>    thread<span style="color:#f92672">.</span>start()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Tk()
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Threaded Operations&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;400x200&#34;</span>)
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create progress bar</span>
</span></span><span style="display:flex;"><span>progress_bar <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Progressbar(root, orient<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;horizontal&#34;</span>, length<span style="color:#f92672">=</span><span style="color:#ae81ff">300</span>, mode<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;determinate&#34;</span>)
</span></span><span style="display:flex;"><span>progress_bar<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Status label</span>
</span></span><span style="display:flex;"><span>progress_label <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Label(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Ready&#34;</span>)
</span></span><span style="display:flex;"><span>progress_label<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Button to start calculation</span>
</span></span><span style="display:flex;"><span>calculate_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(root, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Run Financial Analysis&#34;</span>, command<span style="color:#f92672">=</span>start_calculation)
</span></span><span style="display:flex;"><span>calculate_button<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root<span style="color:#f92672">.</span>mainloop()
</span></span></code></pre></div><p>This pattern is very important for finance applications where you might be running complex calculations or API calls that would otherwise freeze the UI.</p>
<h3 id="4-creating-a-portfolio-tracker-with-multiple-windows">4. Creating a Portfolio Tracker with Multiple Windows</h3>
<p>Let&rsquo;s create a more complex application that demonstrates multiple windows, menus, and data visualization:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> tkinter <span style="color:#66d9ef">as</span> tk
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> tkinter <span style="color:#f92672">import</span> ttk, messagebox, simpledialog
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> json
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> os
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> datetime <span style="color:#f92672">import</span> datetime
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> random  <span style="color:#75715e"># For demo data; you&#39;d use real APIs in production</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">PortfolioTracker</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> __init__(self, root):
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>root <span style="color:#f92672">=</span> root
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>root<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Investment Portfolio Tracker&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>root<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;800x600&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>root<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Data storage</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>portfolio <span style="color:#f92672">=</span> {}
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>data_file <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;portfolio_data.json&#34;</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>load_data()
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create UI</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>create_widgets()
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>create_menu()
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">create_menu</span>(self):
</span></span><span style="display:flex;"><span>        menubar <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Menu(self<span style="color:#f92672">.</span>root)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># File menu</span>
</span></span><span style="display:flex;"><span>        file_menu <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Menu(menubar, tearoff<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>        file_menu<span style="color:#f92672">.</span>add_command(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;New Portfolio&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>new_portfolio)
</span></span><span style="display:flex;"><span>        file_menu<span style="color:#f92672">.</span>add_command(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Save&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>save_data)
</span></span><span style="display:flex;"><span>        file_menu<span style="color:#f92672">.</span>add_separator()
</span></span><span style="display:flex;"><span>        file_menu<span style="color:#f92672">.</span>add_command(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Exit&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>root<span style="color:#f92672">.</span>quit)
</span></span><span style="display:flex;"><span>        menubar<span style="color:#f92672">.</span>add_cascade(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;File&#34;</span>, menu<span style="color:#f92672">=</span>file_menu)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Portfolio menu</span>
</span></span><span style="display:flex;"><span>        portfolio_menu <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Menu(menubar, tearoff<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>        portfolio_menu<span style="color:#f92672">.</span>add_command(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Add Investment&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>add_investment_dialog)
</span></span><span style="display:flex;"><span>        portfolio_menu<span style="color:#f92672">.</span>add_command(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Rebalance Portfolio&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>rebalance_portfolio)
</span></span><span style="display:flex;"><span>        menubar<span style="color:#f92672">.</span>add_cascade(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Portfolio&#34;</span>, menu<span style="color:#f92672">=</span>portfolio_menu)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Analysis menu</span>
</span></span><span style="display:flex;"><span>        analysis_menu <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Menu(menubar, tearoff<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>        analysis_menu<span style="color:#f92672">.</span>add_command(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Risk Analysis&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>show_risk_analysis)
</span></span><span style="display:flex;"><span>        analysis_menu<span style="color:#f92672">.</span>add_command(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Performance Chart&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>show_performance_chart)
</span></span><span style="display:flex;"><span>        menubar<span style="color:#f92672">.</span>add_cascade(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Analysis&#34;</span>, menu<span style="color:#f92672">=</span>analysis_menu)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Help menu</span>
</span></span><span style="display:flex;"><span>        help_menu <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Menu(menubar, tearoff<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>        help_menu<span style="color:#f92672">.</span>add_command(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;About&#34;</span>, command<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>show_about)
</span></span><span style="display:flex;"><span>        menubar<span style="color:#f92672">.</span>add_cascade(label<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Help&#34;</span>, menu<span style="color:#f92672">=</span>help_menu)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>root<span style="color:#f92672">.</span>config(menu<span style="color:#f92672">=</span>menubar)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">create_widgets</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Main container with notebook (tabbed interface)</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>notebook <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Notebook(self<span style="color:#f92672">.</span>root)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>notebook<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>, expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create tabs</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>overview_tab <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(self<span style="color:#f92672">.</span>notebook)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>stocks_tab <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(self<span style="color:#f92672">.</span>notebook)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>bonds_tab <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(self<span style="color:#f92672">.</span>notebook)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>cash_tab <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(self<span style="color:#f92672">.</span>notebook)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>notebook<span style="color:#f92672">.</span>add(self<span style="color:#f92672">.</span>overview_tab, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Portfolio Overview&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>notebook<span style="color:#f92672">.</span>add(self<span style="color:#f92672">.</span>stocks_tab, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Stocks&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>notebook<span style="color:#f92672">.</span>add(self<span style="color:#f92672">.</span>bonds_tab, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Bonds&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>notebook<span style="color:#f92672">.</span>add(self<span style="color:#f92672">.</span>cash_tab, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Cash &amp; Equivalents&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Set up the overview tab</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>setup_overview_tab()
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Set up asset-specific tabs</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>setup_asset_tab(self<span style="color:#f92672">.</span>stocks_tab, <span style="color:#e6db74">&#34;stock&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>setup_asset_tab(self<span style="color:#f92672">.</span>bonds_tab, <span style="color:#e6db74">&#34;bond&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>setup_asset_tab(self<span style="color:#f92672">.</span>cash_tab, <span style="color:#e6db74">&#34;cash&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">setup_overview_tab</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Summary frame at top</span>
</span></span><span style="display:flex;"><span>        summary_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>LabelFrame(self<span style="color:#f92672">.</span>overview_tab, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Portfolio Summary&#34;</span>)
</span></span><span style="display:flex;"><span>        summary_frame<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;x&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Portfolio value display</span>
</span></span><span style="display:flex;"><span>        value_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(summary_frame)
</span></span><span style="display:flex;"><span>        value_frame<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;x&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(value_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Total Portfolio Value:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>total_value_label <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Label(value_frame, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;$0.00&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">12</span>, <span style="color:#e6db74">&#34;bold&#34;</span>))
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>total_value_label<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Asset allocation frame</span>
</span></span><span style="display:flex;"><span>        allocation_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>LabelFrame(self<span style="color:#f92672">.</span>overview_tab, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Asset Allocation&#34;</span>)
</span></span><span style="display:flex;"><span>        allocation_frame<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>, expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Placeholder for chart - in a real app, use matplotlib or similar</span>
</span></span><span style="display:flex;"><span>        allocation_canvas <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Canvas(allocation_frame, bg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;white&#34;</span>, height<span style="color:#f92672">=</span><span style="color:#ae81ff">250</span>)
</span></span><span style="display:flex;"><span>        allocation_canvas<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>, expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Placeholder text (replace with actual chart)</span>
</span></span><span style="display:flex;"><span>        allocation_canvas<span style="color:#f92672">.</span>create_text(
</span></span><span style="display:flex;"><span>            allocation_canvas<span style="color:#f92672">.</span>winfo_reqwidth() <span style="color:#f92672">//</span> <span style="color:#ae81ff">2</span>, 
</span></span><span style="display:flex;"><span>            allocation_canvas<span style="color:#f92672">.</span>winfo_reqheight() <span style="color:#f92672">//</span> <span style="color:#ae81ff">2</span>,
</span></span><span style="display:flex;"><span>            text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;[Asset Allocation Chart Would Be Here]&#34;</span>,
</span></span><span style="display:flex;"><span>            font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">14</span>)
</span></span><span style="display:flex;"><span>        )
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Recent performance</span>
</span></span><span style="display:flex;"><span>        performance_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>LabelFrame(self<span style="color:#f92672">.</span>overview_tab, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Recent Performance&#34;</span>)
</span></span><span style="display:flex;"><span>        performance_frame<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;x&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Basic stats in grid layout</span>
</span></span><span style="display:flex;"><span>        stats <span style="color:#f92672">=</span> [
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;1 Day:&#34;</span>, <span style="color:#e6db74">&#34;+0.3%&#34;</span>),
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;1 Week:&#34;</span>, <span style="color:#e6db74">&#34;-0.7%&#34;</span>),
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;1 Month:&#34;</span>, <span style="color:#e6db74">&#34;+2.1%&#34;</span>),
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;3 Months:&#34;</span>, <span style="color:#e6db74">&#34;+5.4%&#34;</span>),
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;YTD:&#34;</span>, <span style="color:#e6db74">&#34;+12.3%&#34;</span>),
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;1 Year:&#34;</span>, <span style="color:#e6db74">&#34;+15.8%&#34;</span>)
</span></span><span style="display:flex;"><span>        ]
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> i, (label, value) <span style="color:#f92672">in</span> enumerate(stats):
</span></span><span style="display:flex;"><span>            row, col <span style="color:#f92672">=</span> i <span style="color:#f92672">//</span> <span style="color:#ae81ff">3</span>, i <span style="color:#f92672">%</span> <span style="color:#ae81ff">3</span>
</span></span><span style="display:flex;"><span>            ttk<span style="color:#f92672">.</span>Label(performance_frame, text<span style="color:#f92672">=</span>label)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span>row, column<span style="color:#f92672">=</span>col<span style="color:#f92672">*</span><span style="color:#ae81ff">2</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;e&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Color based on positive/negative</span>
</span></span><span style="display:flex;"><span>            color <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;green&#34;</span> <span style="color:#66d9ef">if</span> <span style="color:#e6db74">&#34;+&#34;</span> <span style="color:#f92672">in</span> value <span style="color:#66d9ef">else</span> <span style="color:#e6db74">&#34;red&#34;</span>
</span></span><span style="display:flex;"><span>            value_label <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Label(performance_frame, text<span style="color:#f92672">=</span>value)
</span></span><span style="display:flex;"><span>            value_label<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span>row, column<span style="color:#f92672">=</span>col<span style="color:#f92672">*</span><span style="color:#ae81ff">2</span><span style="color:#f92672">+</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Note: ttk doesn&#39;t support direct text color, would need custom style</span>
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Update displays</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>update_overview()
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">setup_asset_tab</span>(self, tab, asset_type):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create treeview for this asset type</span>
</span></span><span style="display:flex;"><span>        columns <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;Name&#34;</span>, <span style="color:#e6db74">&#34;Ticker&#34;</span>, <span style="color:#e6db74">&#34;Shares/Units&#34;</span>, <span style="color:#e6db74">&#34;Price&#34;</span>, <span style="color:#e6db74">&#34;Value&#34;</span>, <span style="color:#e6db74">&#34;Allocation&#34;</span>)
</span></span><span style="display:flex;"><span>        tree <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Treeview(tab, columns<span style="color:#f92672">=</span>columns, show<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;headings&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Configure columns</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> col <span style="color:#f92672">in</span> columns:
</span></span><span style="display:flex;"><span>            tree<span style="color:#f92672">.</span>heading(col, text<span style="color:#f92672">=</span>col)
</span></span><span style="display:flex;"><span>            width <span style="color:#f92672">=</span> <span style="color:#ae81ff">150</span> <span style="color:#66d9ef">if</span> col <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;Name&#34;</span> <span style="color:#66d9ef">else</span> <span style="color:#ae81ff">100</span>
</span></span><span style="display:flex;"><span>            tree<span style="color:#f92672">.</span>column(col, width<span style="color:#f92672">=</span>width)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add scrollbar</span>
</span></span><span style="display:flex;"><span>        scrollbar <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Scrollbar(tab, orient<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;vertical&#34;</span>, command<span style="color:#f92672">=</span>tree<span style="color:#f92672">.</span>yview)
</span></span><span style="display:flex;"><span>        scrollbar<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;right&#34;</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;y&#34;</span>)
</span></span><span style="display:flex;"><span>        tree<span style="color:#f92672">.</span>configure(yscrollcommand<span style="color:#f92672">=</span>scrollbar<span style="color:#f92672">.</span>set)
</span></span><span style="display:flex;"><span>        tree<span style="color:#f92672">.</span>pack(expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Store reference to this tree</span>
</span></span><span style="display:flex;"><span>        setattr(self, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span>asset_type<span style="color:#e6db74">}</span><span style="color:#e6db74">_tree&#34;</span>, tree)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add button frame</span>
</span></span><span style="display:flex;"><span>        button_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Frame(tab)
</span></span><span style="display:flex;"><span>        button_frame<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;x&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add buttons</span>
</span></span><span style="display:flex;"><span>        add_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(
</span></span><span style="display:flex;"><span>            button_frame, 
</span></span><span style="display:flex;"><span>            text<span style="color:#f92672">=</span><span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Add </span><span style="color:#e6db74">{</span>asset_type<span style="color:#f92672">.</span>title()<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>, 
</span></span><span style="display:flex;"><span>            command<span style="color:#f92672">=</span><span style="color:#66d9ef">lambda</span>: self<span style="color:#f92672">.</span>add_investment_dialog(asset_type)
</span></span><span style="display:flex;"><span>        )
</span></span><span style="display:flex;"><span>        add_button<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;left&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        remove_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(
</span></span><span style="display:flex;"><span>            button_frame, 
</span></span><span style="display:flex;"><span>            text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Remove Selected&#34;</span>, 
</span></span><span style="display:flex;"><span>            command<span style="color:#f92672">=</span><span style="color:#66d9ef">lambda</span>: self<span style="color:#f92672">.</span>remove_investment(asset_type, getattr(self, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span>asset_type<span style="color:#e6db74">}</span><span style="color:#e6db74">_tree&#34;</span>))
</span></span><span style="display:flex;"><span>        )
</span></span><span style="display:flex;"><span>        remove_button<span style="color:#f92672">.</span>pack(side<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;left&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Bind double-click to edit</span>
</span></span><span style="display:flex;"><span>        tree<span style="color:#f92672">.</span>bind(<span style="color:#e6db74">&#34;&lt;Double-1&gt;&#34;</span>, <span style="color:#66d9ef">lambda</span> event, at<span style="color:#f92672">=</span>asset_type: self<span style="color:#f92672">.</span>edit_investment(at, event))
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">add_investment_dialog</span>(self, asset_type<span style="color:#f92672">=</span><span style="color:#66d9ef">None</span>):
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> asset_type <span style="color:#f92672">is</span> <span style="color:#66d9ef">None</span>:
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Let user select asset type if not specified</span>
</span></span><span style="display:flex;"><span>            options <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#34;stock&#34;</span>, <span style="color:#e6db74">&#34;bond&#34;</span>, <span style="color:#e6db74">&#34;cash&#34;</span>]
</span></span><span style="display:flex;"><span>            asset_type <span style="color:#f92672">=</span> simpledialog<span style="color:#f92672">.</span>askstring(
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;Asset Type&#34;</span>, 
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;Enter asset type (stock, bond, cash):&#34;</span>,
</span></span><span style="display:flex;"><span>                parent<span style="color:#f92672">=</span>self<span style="color:#f92672">.</span>root
</span></span><span style="display:flex;"><span>            )
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">if</span> asset_type <span style="color:#f92672">not</span> <span style="color:#f92672">in</span> options:
</span></span><span style="display:flex;"><span>                messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Error&#34;</span>, <span style="color:#e6db74">&#34;Invalid asset type&#34;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span>
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create dialog window</span>
</span></span><span style="display:flex;"><span>        dialog <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Toplevel(self<span style="color:#f92672">.</span>root)
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>title(<span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Add </span><span style="color:#e6db74">{</span>asset_type<span style="color:#f92672">.</span>title()<span style="color:#e6db74">}</span><span style="color:#e6db74"> Investment&#34;</span>)
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;400x300&#34;</span>)
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>transient(self<span style="color:#f92672">.</span>root)  <span style="color:#75715e"># Set as transient to main window</span>
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>grab_set()  <span style="color:#75715e"># Modal dialog</span>
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Form fields</span>
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Name:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        name_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(dialog, width<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>)
</span></span><span style="display:flex;"><span>        name_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Ticker/Symbol:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        ticker_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(dialog, width<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>)
</span></span><span style="display:flex;"><span>        ticker_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Shares/Units:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        shares_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(dialog, width<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>)
</span></span><span style="display:flex;"><span>        shares_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Price per Share/Unit:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        price_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(dialog, width<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>)
</span></span><span style="display:flex;"><span>        price_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Purchase Date:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">4</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        date_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(dialog, width<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>)
</span></span><span style="display:flex;"><span>        date_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">4</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        date_entry<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, datetime<span style="color:#f92672">.</span>now()<span style="color:#f92672">.</span>strftime(<span style="color:#e6db74">&#34;%Y-%m-</span><span style="color:#e6db74">%d</span><span style="color:#e6db74">&#34;</span>))
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add Button</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">save_investment</span>():
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>                name <span style="color:#f92672">=</span> name_entry<span style="color:#f92672">.</span>get()<span style="color:#f92672">.</span>strip()
</span></span><span style="display:flex;"><span>                ticker <span style="color:#f92672">=</span> ticker_entry<span style="color:#f92672">.</span>get()<span style="color:#f92672">.</span>strip()
</span></span><span style="display:flex;"><span>                shares <span style="color:#f92672">=</span> float(shares_entry<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>                price <span style="color:#f92672">=</span> float(price_entry<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>                date <span style="color:#f92672">=</span> date_entry<span style="color:#f92672">.</span>get()
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> name <span style="color:#f92672">or</span> <span style="color:#f92672">not</span> ticker <span style="color:#f92672">or</span> shares <span style="color:#f92672">&lt;=</span> <span style="color:#ae81ff">0</span> <span style="color:#f92672">or</span> price <span style="color:#f92672">&lt;=</span> <span style="color:#ae81ff">0</span>:
</span></span><span style="display:flex;"><span>                    messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Input Error&#34;</span>, <span style="color:#e6db74">&#34;Please enter valid values for all fields.&#34;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">return</span>
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>                <span style="color:#75715e"># Create unique ID</span>
</span></span><span style="display:flex;"><span>                investment_id <span style="color:#f92672">=</span> <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span>asset_type<span style="color:#e6db74">}</span><span style="color:#e6db74">_</span><span style="color:#e6db74">{</span>ticker<span style="color:#e6db74">}</span><span style="color:#e6db74">_</span><span style="color:#e6db74">{</span>len(self<span style="color:#f92672">.</span>portfolio) <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>                <span style="color:#75715e"># Add to portfolio</span>
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>portfolio[investment_id] <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">&#34;id&#34;</span>: investment_id,
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">&#34;name&#34;</span>: name,
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">&#34;ticker&#34;</span>: ticker,
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">&#34;shares&#34;</span>: shares,
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">&#34;price&#34;</span>: price,
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">&#34;purchase_date&#34;</span>: date,
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">&#34;type&#34;</span>: asset_type
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>                <span style="color:#75715e"># Update UI</span>
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>save_data()
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>update_display()
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>                <span style="color:#75715e"># Close dialog</span>
</span></span><span style="display:flex;"><span>                dialog<span style="color:#f92672">.</span>destroy()
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">ValueError</span>:
</span></span><span style="display:flex;"><span>                messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Input Error&#34;</span>, <span style="color:#e6db74">&#34;Please enter valid numbers for shares and price.&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        save_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Save Investment&#34;</span>, command<span style="color:#f92672">=</span>save_investment)
</span></span><span style="display:flex;"><span>        save_button<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Configure grid expansion</span>
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>grid_columnconfigure(<span style="color:#ae81ff">1</span>, weight<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">edit_investment</span>(self, asset_type, event):
</span></span><span style="display:flex;"><span>        tree <span style="color:#f92672">=</span> getattr(self, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span>asset_type<span style="color:#e6db74">}</span><span style="color:#e6db74">_tree&#34;</span>)
</span></span><span style="display:flex;"><span>        item_id <span style="color:#f92672">=</span> tree<span style="color:#f92672">.</span>identify_row(event<span style="color:#f92672">.</span>y)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> item_id:
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span>
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Get the values displayed in the treeview</span>
</span></span><span style="display:flex;"><span>        values <span style="color:#f92672">=</span> tree<span style="color:#f92672">.</span>item(item_id, <span style="color:#e6db74">&#39;values&#39;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> values:
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span>
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Find the investment in our data</span>
</span></span><span style="display:flex;"><span>        ticker <span style="color:#f92672">=</span> values[<span style="color:#ae81ff">1</span>]  <span style="color:#75715e"># Assuming ticker is in second column</span>
</span></span><span style="display:flex;"><span>        investment <span style="color:#f92672">=</span> <span style="color:#66d9ef">None</span>
</span></span><span style="display:flex;"><span>        investment_id <span style="color:#f92672">=</span> <span style="color:#66d9ef">None</span>
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> id, inv <span style="color:#f92672">in</span> self<span style="color:#f92672">.</span>portfolio<span style="color:#f92672">.</span>items():
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">if</span> inv[<span style="color:#e6db74">&#34;ticker&#34;</span>] <span style="color:#f92672">==</span> ticker <span style="color:#f92672">and</span> inv[<span style="color:#e6db74">&#34;type&#34;</span>] <span style="color:#f92672">==</span> asset_type:
</span></span><span style="display:flex;"><span>                investment <span style="color:#f92672">=</span> inv
</span></span><span style="display:flex;"><span>                investment_id <span style="color:#f92672">=</span> id
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">break</span>
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> investment:
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span>
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create dialog window</span>
</span></span><span style="display:flex;"><span>        dialog <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Toplevel(self<span style="color:#f92672">.</span>root)
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>title(<span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Edit </span><span style="color:#e6db74">{</span>investment[<span style="color:#e6db74">&#39;name&#39;</span>]<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;400x300&#34;</span>)
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>transient(self<span style="color:#f92672">.</span>root)
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>grab_set()
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Form fields (pre-filled)</span>
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Name:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        name_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(dialog, width<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>)
</span></span><span style="display:flex;"><span>        name_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        name_entry<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, investment[<span style="color:#e6db74">&#34;name&#34;</span>])
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Ticker/Symbol:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        ticker_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(dialog, width<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>)
</span></span><span style="display:flex;"><span>        ticker_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        ticker_entry<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, investment[<span style="color:#e6db74">&#34;ticker&#34;</span>])
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Shares/Units:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        shares_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(dialog, width<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>)
</span></span><span style="display:flex;"><span>        shares_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        shares_entry<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, str(investment[<span style="color:#e6db74">&#34;shares&#34;</span>]))
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Price per Share/Unit:&#34;</span>)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        price_entry <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Entry(dialog, width<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>)
</span></span><span style="display:flex;"><span>        price_entry<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;ew&#34;</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        price_entry<span style="color:#f92672">.</span>insert(<span style="color:#ae81ff">0</span>, str(investment[<span style="color:#e6db74">&#34;price&#34;</span>]))
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Update Button</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">update_investment</span>():
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>                name <span style="color:#f92672">=</span> name_entry<span style="color:#f92672">.</span>get()<span style="color:#f92672">.</span>strip()
</span></span><span style="display:flex;"><span>                ticker <span style="color:#f92672">=</span> ticker_entry<span style="color:#f92672">.</span>get()<span style="color:#f92672">.</span>strip()
</span></span><span style="display:flex;"><span>                shares <span style="color:#f92672">=</span> float(shares_entry<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>                price <span style="color:#f92672">=</span> float(price_entry<span style="color:#f92672">.</span>get())
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> name <span style="color:#f92672">or</span> <span style="color:#f92672">not</span> ticker <span style="color:#f92672">or</span> shares <span style="color:#f92672">&lt;=</span> <span style="color:#ae81ff">0</span> <span style="color:#f92672">or</span> price <span style="color:#f92672">&lt;=</span> <span style="color:#ae81ff">0</span>:
</span></span><span style="display:flex;"><span>                    messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Input Error&#34;</span>, <span style="color:#e6db74">&#34;Please enter valid values for all fields.&#34;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">return</span>
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>                <span style="color:#75715e"># Update portfolio</span>
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>portfolio[investment_id][<span style="color:#e6db74">&#34;name&#34;</span>] <span style="color:#f92672">=</span> name
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>portfolio[investment_id][<span style="color:#e6db74">&#34;ticker&#34;</span>] <span style="color:#f92672">=</span> ticker
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>portfolio[investment_id][<span style="color:#e6db74">&#34;shares&#34;</span>] <span style="color:#f92672">=</span> shares
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>portfolio[investment_id][<span style="color:#e6db74">&#34;price&#34;</span>] <span style="color:#f92672">=</span> price
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>                <span style="color:#75715e"># Update UI</span>
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>save_data()
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>update_display()
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>                <span style="color:#75715e"># Close dialog</span>
</span></span><span style="display:flex;"><span>                dialog<span style="color:#f92672">.</span>destroy()
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">ValueError</span>:
</span></span><span style="display:flex;"><span>                messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Input Error&#34;</span>, <span style="color:#e6db74">&#34;Please enter valid numbers for shares and price.&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        update_button <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>Button(dialog, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Update Investment&#34;</span>, command<span style="color:#f92672">=</span>update_investment)
</span></span><span style="display:flex;"><span>        update_button<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, columnspan<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Configure grid expansion</span>
</span></span><span style="display:flex;"><span>        dialog<span style="color:#f92672">.</span>grid_columnconfigure(<span style="color:#ae81ff">1</span>, weight<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">remove_investment</span>(self, asset_type, tree):
</span></span><span style="display:flex;"><span>        selected <span style="color:#f92672">=</span> tree<span style="color:#f92672">.</span>selection()
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> selected:
</span></span><span style="display:flex;"><span>            messagebox<span style="color:#f92672">.</span>showinfo(<span style="color:#e6db74">&#34;Selection Required&#34;</span>, <span style="color:#e6db74">&#34;Please select an investment to remove.&#34;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span>
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Confirm deletion</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> messagebox<span style="color:#f92672">.</span>askyesno(<span style="color:#e6db74">&#34;Confirm Removal&#34;</span>, 
</span></span><span style="display:flex;"><span>                                  <span style="color:#e6db74">&#34;Are you sure you want to remove the selected investment(s)?&#34;</span>):
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span>
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Get the values from the selected items</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> item_id <span style="color:#f92672">in</span> selected:
</span></span><span style="display:flex;"><span>            values <span style="color:#f92672">=</span> tree<span style="color:#f92672">.</span>item(item_id, <span style="color:#e6db74">&#39;values&#39;</span>)
</span></span><span style="display:flex;"><span>            ticker <span style="color:#f92672">=</span> values[<span style="color:#ae81ff">1</span>]  <span style="color:#75715e"># Assuming ticker is in second column</span>
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Find and remove the investment from our data</span>
</span></span><span style="display:flex;"><span>            to_remove <span style="color:#f92672">=</span> []
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">for</span> id, inv <span style="color:#f92672">in</span> self<span style="color:#f92672">.</span>portfolio<span style="color:#f92672">.</span>items():
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">if</span> inv[<span style="color:#e6db74">&#34;ticker&#34;</span>] <span style="color:#f92672">==</span> ticker <span style="color:#f92672">and</span> inv[<span style="color:#e6db74">&#34;type&#34;</span>] <span style="color:#f92672">==</span> asset_type:
</span></span><span style="display:flex;"><span>                    to_remove<span style="color:#f92672">.</span>append(id)
</span></span><span style="display:flex;"><span>                    
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">for</span> id <span style="color:#f92672">in</span> to_remove:
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">del</span> self<span style="color:#f92672">.</span>portfolio[id]
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Update UI</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>save_data()
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>update_display()
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">update_display</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Update all asset type tabs</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>update_asset_tab(<span style="color:#e6db74">&#34;stock&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>update_asset_tab(<span style="color:#e6db74">&#34;bond&#34;</span>)
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>update_asset_tab(<span style="color:#e6db74">&#34;cash&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Update overview tab</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>update_overview()
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">update_asset_tab</span>(self, asset_type):
</span></span><span style="display:flex;"><span>        tree <span style="color:#f92672">=</span> getattr(self, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span>asset_type<span style="color:#e6db74">}</span><span style="color:#e6db74">_tree&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Clear existing entries</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> item <span style="color:#f92672">in</span> tree<span style="color:#f92672">.</span>get_children():
</span></span><span style="display:flex;"><span>            tree<span style="color:#f92672">.</span>delete(item)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Calculate total portfolio value</span>
</span></span><span style="display:flex;"><span>        total_value <span style="color:#f92672">=</span> self<span style="color:#f92672">.</span>calculate_total_value()
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add investments to tree</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> id, investment <span style="color:#f92672">in</span> self<span style="color:#f92672">.</span>portfolio<span style="color:#f92672">.</span>items():
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">if</span> investment[<span style="color:#e6db74">&#34;type&#34;</span>] <span style="color:#f92672">==</span> asset_type:
</span></span><span style="display:flex;"><span>                value <span style="color:#f92672">=</span> investment[<span style="color:#e6db74">&#34;shares&#34;</span>] <span style="color:#f92672">*</span> investment[<span style="color:#e6db74">&#34;price&#34;</span>]
</span></span><span style="display:flex;"><span>                allocation <span style="color:#f92672">=</span> value <span style="color:#f92672">/</span> total_value <span style="color:#f92672">*</span> <span style="color:#ae81ff">100</span> <span style="color:#66d9ef">if</span> total_value <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span> <span style="color:#66d9ef">else</span> <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>                
</span></span><span style="display:flex;"><span>                tree<span style="color:#f92672">.</span>insert(<span style="color:#e6db74">&#34;&#34;</span>, <span style="color:#e6db74">&#34;end&#34;</span>, values<span style="color:#f92672">=</span>(
</span></span><span style="display:flex;"><span>                    investment[<span style="color:#e6db74">&#34;name&#34;</span>],
</span></span><span style="display:flex;"><span>                    investment[<span style="color:#e6db74">&#34;ticker&#34;</span>],
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span>investment[<span style="color:#e6db74">&#39;shares&#39;</span>]<span style="color:#e6db74">:</span><span style="color:#e6db74">.2f</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>,
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;$</span><span style="color:#e6db74">{</span>investment[<span style="color:#e6db74">&#39;price&#39;</span>]<span style="color:#e6db74">:</span><span style="color:#e6db74">.2f</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>,
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;$</span><span style="color:#e6db74">{</span>value<span style="color:#e6db74">:</span><span style="color:#e6db74">.2f</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>,
</span></span><span style="display:flex;"><span>                    <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">{</span>allocation<span style="color:#e6db74">:</span><span style="color:#e6db74">.1f</span><span style="color:#e6db74">}</span><span style="color:#e6db74">%&#34;</span>
</span></span><span style="display:flex;"><span>                ))
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">update_overview</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Calculate total value</span>
</span></span><span style="display:flex;"><span>        total_value <span style="color:#f92672">=</span> self<span style="color:#f92672">.</span>calculate_total_value()
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Update value label</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>total_value_label<span style="color:#f92672">.</span>config(text<span style="color:#f92672">=</span><span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;$</span><span style="color:#e6db74">{</span>total_value<span style="color:#e6db74">:</span><span style="color:#e6db74">.2f</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># In a real app, update charts and other visualizations here</span>
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">calculate_total_value</span>(self):
</span></span><span style="display:flex;"><span>        total <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> id, investment <span style="color:#f92672">in</span> self<span style="color:#f92672">.</span>portfolio<span style="color:#f92672">.</span>items():
</span></span><span style="display:flex;"><span>            total <span style="color:#f92672">+=</span> investment[<span style="color:#e6db74">&#34;shares&#34;</span>] <span style="color:#f92672">*</span> investment[<span style="color:#e6db74">&#34;price&#34;</span>]
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> total
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">new_portfolio</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> messagebox<span style="color:#f92672">.</span>askyesno(<span style="color:#e6db74">&#34;New Portfolio&#34;</span>, 
</span></span><span style="display:flex;"><span>                              <span style="color:#e6db74">&#34;Are you sure you want to create a new portfolio? This will delete all current data.&#34;</span>):
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>portfolio <span style="color:#f92672">=</span> {}
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>save_data()
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>update_display()
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">rebalance_portfolio</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># In a real app, this would be a complex algorithm</span>
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># For now, we&#39;ll just show a placeholder dialog</span>
</span></span><span style="display:flex;"><span>        messagebox<span style="color:#f92672">.</span>showinfo(<span style="color:#e6db74">&#34;Rebalance Portfolio&#34;</span>, 
</span></span><span style="display:flex;"><span>                           <span style="color:#e6db74">&#34;In a complete application, this would analyze your portfolio and suggest trades to reach your target allocation.&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">show_risk_analysis</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create a new window</span>
</span></span><span style="display:flex;"><span>        analysis <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Toplevel(self<span style="color:#f92672">.</span>root)
</span></span><span style="display:flex;"><span>        analysis<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Risk Analysis&#34;</span>)
</span></span><span style="display:flex;"><span>        analysis<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;600x400&#34;</span>)
</span></span><span style="display:flex;"><span>        analysis<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Add some placeholder content</span>
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(analysis, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Portfolio Risk Analysis&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">16</span>, <span style="color:#e6db74">&#34;bold&#34;</span>))<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Metrics frame</span>
</span></span><span style="display:flex;"><span>        metrics_frame <span style="color:#f92672">=</span> ttk<span style="color:#f92672">.</span>LabelFrame(analysis, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Key Risk Metrics&#34;</span>)
</span></span><span style="display:flex;"><span>        metrics_frame<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;x&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        metrics <span style="color:#f92672">=</span> [
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;Beta:&#34;</span>, <span style="color:#e6db74">&#34;0.85&#34;</span>),
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;Sharpe Ratio:&#34;</span>, <span style="color:#e6db74">&#34;1.23&#34;</span>),
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;Standard Deviation:&#34;</span>, <span style="color:#e6db74">&#34;12.4%&#34;</span>),
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;Max Drawdown:&#34;</span>, <span style="color:#e6db74">&#34;-15.7%&#34;</span>),
</span></span><span style="display:flex;"><span>            (<span style="color:#e6db74">&#34;Value at Risk (95%):&#34;</span>, <span style="color:#e6db74">&#34;$3,245&#34;</span>)
</span></span><span style="display:flex;"><span>        ]
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> i, (label, value) <span style="color:#f92672">in</span> enumerate(metrics):
</span></span><span style="display:flex;"><span>            ttk<span style="color:#f92672">.</span>Label(metrics_frame, text<span style="color:#f92672">=</span>label)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span>i, column<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>            ttk<span style="color:#f92672">.</span>Label(metrics_frame, text<span style="color:#f92672">=</span>value)<span style="color:#f92672">.</span>grid(row<span style="color:#f92672">=</span>i, column<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>, sticky<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;w&#34;</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(analysis, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Note: In a complete application, this would provide detailed risk metrics based on historical data and correlations between your holdings.&#34;</span>)<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">show_performance_chart</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create a new window</span>
</span></span><span style="display:flex;"><span>        chart_window <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Toplevel(self<span style="color:#f92672">.</span>root)
</span></span><span style="display:flex;"><span>        chart_window<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Performance Chart&#34;</span>)
</span></span><span style="display:flex;"><span>        chart_window<span style="color:#f92672">.</span>geometry(<span style="color:#e6db74">&#34;800x500&#34;</span>)
</span></span><span style="display:flex;"><span>        chart_window<span style="color:#f92672">.</span>configure(padx<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">20</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        ttk<span style="color:#f92672">.</span>Label(chart_window, text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Portfolio Performance&#34;</span>, font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">16</span>, <span style="color:#e6db74">&#34;bold&#34;</span>))<span style="color:#f92672">.</span>pack(pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># In a real app, you would use matplotlib or another charting library</span>
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># For now, just show a canvas with placeholder text</span>
</span></span><span style="display:flex;"><span>        canvas <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Canvas(chart_window, bg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;white&#34;</span>, height<span style="color:#f92672">=</span><span style="color:#ae81ff">400</span>)
</span></span><span style="display:flex;"><span>        canvas<span style="color:#f92672">.</span>pack(fill<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;both&#34;</span>, expand<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, padx<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>, pady<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        canvas<span style="color:#f92672">.</span>create_text(
</span></span><span style="display:flex;"><span>            canvas<span style="color:#f92672">.</span>winfo_reqwidth() <span style="color:#f92672">//</span> <span style="color:#ae81ff">2</span>, 
</span></span><span style="display:flex;"><span>            canvas<span style="color:#f92672">.</span>winfo_reqheight() <span style="color:#f92672">//</span> <span style="color:#ae81ff">2</span>,
</span></span><span style="display:flex;"><span>            text<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;[Performance Chart Would Be Here]</span><span style="color:#ae81ff">\n\n</span><span style="color:#e6db74">In a complete application, this would be a</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">charting library like Matplotlib showing</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">your portfolio&#39;s performance over time.&#34;</span>,
</span></span><span style="display:flex;"><span>            font<span style="color:#f92672">=</span>(<span style="color:#e6db74">&#34;Arial&#34;</span>, <span style="color:#ae81ff">14</span>)
</span></span><span style="display:flex;"><span>        )
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">show_about</span>(self):
</span></span><span style="display:flex;"><span>        messagebox<span style="color:#f92672">.</span>showinfo(<span style="color:#e6db74">&#34;About&#34;</span>, <span style="color:#e6db74">&#34;Portfolio Tracker v1.0</span><span style="color:#ae81ff">\n\n</span><span style="color:#e6db74">Created with Python and Tkinter</span><span style="color:#ae81ff">\n\n</span><span style="color:#e6db74">Part of the &#39;Learning Python in Public&#39; series&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">load_data</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">if</span> os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>exists(self<span style="color:#f92672">.</span>data_file):
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">with</span> open(self<span style="color:#f92672">.</span>data_file, <span style="color:#e6db74">&#34;r&#34;</span>) <span style="color:#66d9ef">as</span> file:
</span></span><span style="display:flex;"><span>                    self<span style="color:#f92672">.</span>portfolio <span style="color:#f92672">=</span> json<span style="color:#f92672">.</span>load(file)
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">else</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#75715e"># Demo data for first-time users</span>
</span></span><span style="display:flex;"><span>                self<span style="color:#f92672">.</span>create_demo_data()
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">Exception</span> <span style="color:#66d9ef">as</span> e:
</span></span><span style="display:flex;"><span>            messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Data Error&#34;</span>, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Error loading data: </span><span style="color:#e6db74">{</span>str(e)<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>            self<span style="color:#f92672">.</span>portfolio <span style="color:#f92672">=</span> {}
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">save_data</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">with</span> open(self<span style="color:#f92672">.</span>data_file, <span style="color:#e6db74">&#34;w&#34;</span>) <span style="color:#66d9ef">as</span> file:
</span></span><span style="display:flex;"><span>                json<span style="color:#f92672">.</span>dump(self<span style="color:#f92672">.</span>portfolio, file, indent<span style="color:#f92672">=</span><span style="color:#ae81ff">4</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">Exception</span> <span style="color:#66d9ef">as</span> e:
</span></span><span style="display:flex;"><span>            messagebox<span style="color:#f92672">.</span>showerror(<span style="color:#e6db74">&#34;Data Error&#34;</span>, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Error saving data: </span><span style="color:#e6db74">{</span>str(e)<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">create_demo_data</span>(self):
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Create some sample investments</span>
</span></span><span style="display:flex;"><span>        self<span style="color:#f92672">.</span>portfolio <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;stock_AAPL_1&#34;</span>: {
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;id&#34;</span>: <span style="color:#e6db74">&#34;stock_AAPL_1&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;Apple Inc.&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;ticker&#34;</span>: <span style="color:#e6db74">&#34;AAPL&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;shares&#34;</span>: <span style="color:#ae81ff">10</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;price&#34;</span>: <span style="color:#ae81ff">175.50</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;purchase_date&#34;</span>: <span style="color:#e6db74">&#34;2023-01-15&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;stock&#34;</span>
</span></span><span style="display:flex;"><span>            },
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;stock_MSFT_2&#34;</span>: {
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;id&#34;</span>: <span style="color:#e6db74">&#34;stock_MSFT_2&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;Microsoft Corporation&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;ticker&#34;</span>: <span style="color:#e6db74">&#34;MSFT&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;shares&#34;</span>: <span style="color:#ae81ff">5</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;price&#34;</span>: <span style="color:#ae81ff">325.20</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;purchase_date&#34;</span>: <span style="color:#e6db74">&#34;2023-02-20&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;stock&#34;</span>
</span></span><span style="display:flex;"><span>            },
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;bond_TBILL_3&#34;</span>: {
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;id&#34;</span>: <span style="color:#e6db74">&#34;bond_TBILL_3&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;US Treasury Bill&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;ticker&#34;</span>: <span style="color:#e6db74">&#34;TBILL&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;shares&#34;</span>: <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;price&#34;</span>: <span style="color:#ae81ff">1000.00</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;purchase_date&#34;</span>: <span style="color:#e6db74">&#34;2023-03-10&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;bond&#34;</span>
</span></span><span style="display:flex;"><span>            },
</span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;cash_SAVINGS_4&#34;</span>: {
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;id&#34;</span>: <span style="color:#e6db74">&#34;cash_SAVINGS_4&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;High Yield Savings&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;ticker&#34;</span>: <span style="color:#e6db74">&#34;SAVINGS&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;shares&#34;</span>: <span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;price&#34;</span>: <span style="color:#ae81ff">5000.00</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;purchase_date&#34;</span>: <span style="color:#e6db74">&#34;2023-01-01&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#e6db74">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;cash&#34;</span>
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Creating and running the application when this file is executed directly</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> __name__ <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;__main__&#34;</span>:
</span></span><span style="display:flex;"><span>    root <span style="color:#f92672">=</span> tk<span style="color:#f92672">.</span>Tk()
</span></span><span style="display:flex;"><span>    app <span style="color:#f92672">=</span> PortfolioTracker(root)
</span></span><span style="display:flex;"><span>    root<span style="color:#f92672">.</span>mainloop()
</span></span></code></pre></div><p>This portfolio tracker demonstrates several advanced concepts:</p>
<ul>
<li>Multiple windows and dialogs</li>
<li>Menus and tabbed interfaces</li>
<li>Complex layout with frames and grids</li>
<li>Data persistence and management</li>
<li>Object-oriented design for maintainability</li>
</ul>
<h3 id="5-best-practices-for-tkinter-applications">5. Best Practices for Tkinter Applications</h3>
<p>As you develop more complex Tkinter applications, keep these best practices in mind:</p>
<ol>
<li>**Separate UI from Logic: Keep your application logic (calculations, data processing) separate from your UI code (widget creation, layout). This makes your code easier to understand, test, and maintain. Using classes, as shown in the Expense Tracker and Portfolio Tracker examples, is a good way to achieve this. Your functions that perform calculations (calculate_investment) should ideally not directly manipulate widgets too much; instead, they can return values that another function then uses to update the UI.</li>
</ol>
<p>Use an Object-Oriented Approach: For anything beyond a very simple script, structuring your Tkinter application as a class (or multiple classes) is highly beneficial. This helps in organizing your code, managing state, and making your application more scalable. Notice how the ExpenseTracker and PortfolioTracker classes encapsulate all their widgets and methods.</p>
<p>Employ Layout Managers Effectively: Choose between pack, grid, and place wisely. grid is often the most versatile for structured layouts. pack is good for simpler, sequential layouts or side-by-side arrangements within frames. Avoid using place for most of your layout needs as it can make your UI less adaptable to window resizing or font changes, unless you require precise pixel control. Don&rsquo;t mix grid and pack within the same master window or frame, as it can lead to unexpected behavior.</p>
<p>Use ttk for a Modern Look: The tkinter.ttk module provides themed widgets that generally look better and more native than the classic Tkinter widgets. Always try to use ttk.Button, ttk.Label, etc., where available.</p>
<p>Keep the UI Responsive: For any tasks that might take more than a fraction of a second (e.g., complex financial calculations, network requests, file operations), run them in a separate thread to prevent the GUI from freezing. Use root.after() or queues to safely update the UI from these background threads, as demonstrated in the multithreading example.</p>
<p>Manage Widget References: When you need to interact with a widget after its creation (e.g., to get its value or update its text), store a reference to it, typically as an instance variable (e.g., self.my_entry = ttk.Entry(&hellip;)).</p>
<p>Provide User Feedback: Use labels, message boxes (tkinter.messagebox), or progress bars to inform the user about what the application is doing, especially during longer operations or when errors occur.</p>
<p>Handle Errors Gracefully: Use try-except blocks to catch potential errors (e.g., ValueError when converting entry text to numbers, IOError when dealing with files) and display user-friendly error messages instead of letting the application crash.</p>
<p>Organize with Frames: For complex interfaces, use Frame or ttk.LabelFrame widgets as containers to group related widgets. This makes your layout more modular and easier to manage.</p>
<p>Comment Your Code: Especially in UI programming where widget hierarchies and event bindings can become complex, good comments will help you (and others) understand your code later.</p>
<p>Conclusion: Your Gateway to Desktop Applications
Tkinter, while sometimes viewed as old-fashioned, remains an incredibly valuable tool in the Python ecosystem. As we&rsquo;ve seen, you can go from a simple window to a multi-tabbed, data-driven financial application with relative ease. Its built-in nature means you can quickly prototype ideas or build internal tools without worrying about external dependencies for your users.</p>
<p>For us finance professionals, this opens up a world of possibilities:</p>
<p>Creating custom calculators for specific financial models.
Building simple dashboards to track key metrics.
Developing tools to automate repetitive data entry or report generation tasks.
The examples we&rsquo;ve explored, from a basic investment calculator to a more comprehensive portfolio tracker, only scratch the surface. The key is to start simple, understand the core concepts of widgets, layout management, and event handling, and then gradually build up complexity.</p>
<p>While newer frameworks might offer more visual flair, Tkinter&rsquo;s simplicity, stability, and ubiquity make it an excellent starting point for GUI development in Python. I encourage you to take these examples, experiment with them, and see what useful applications you can build to make your financial workflows more efficient and user-friendly!</p>
]]></content:encoded></item></channel></rss>