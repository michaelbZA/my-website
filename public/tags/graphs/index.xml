<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Graphs on Michael Brunger</title><link>http://localhost:1313/tags/graphs/</link><description>Recent content in Graphs on Michael Brunger</description><image><title>Michael Brunger</title><url>http://localhost:1313/site-feature-image.jpg</url><link>http://localhost:1313/site-feature-image.jpg</link></image><generator>Hugo -- 0.146.7</generator><language>en-GB</language><lastBuildDate>Fri, 09 May 2025 14:44:55 +0100</lastBuildDate><atom:link href="http://localhost:1313/tags/graphs/index.xml" rel="self" type="application/rss+xml"/><item><title>Part 13: Data Visualisation Basics in Python</title><link>http://localhost:1313/python-data-visualisation-basics/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>http://localhost:1313/python-data-visualisation-basics/</guid><description>Create effective data visualisations using Matplotlib and Seaborn. Learn to make various plot types, customise their appearance, and save your figures for reports and presentations.</description><content:encoded><![CDATA[<h1 id="data-visualization-basics-in-python">Data Visualization Basics in Python</h1>
<p>Welcome to the thirteenth post in our Python learning series! In this article, we&rsquo;ll explore how to create effective data visualizations in Python - an essential skill for analyzing and communicating financial data.</p>
<p>If you&rsquo;ve been following along, you&rsquo;ve already learned how to work with data using NumPy and pandas. Now it&rsquo;s time to bring that data to life through visualization. Whether you&rsquo;re analyzing budget trends, tracking investment performance, or presenting financial reports, the right visualization can transform raw numbers into actionable insights.</p>
<h2 id="why-data-visualization-matters-in-finance">Why Data Visualization Matters in Finance</h2>
<p>As a finance professional, I&rsquo;ve found that visualizations can:</p>
<ul>
<li>Quickly identify trends that might be missed in spreadsheets</li>
<li>Effectively communicate financial performance to stakeholders</li>
<li>Spot outliers or anomalies in financial data</li>
<li>Compare actual results against forecasts more intuitively</li>
<li>Support data-driven decision making</li>
</ul>
<p>Let&rsquo;s dive into the tools and techniques we&rsquo;ll need to create these visualizations.</p>
<h2 id="setting-up-your-environment">Setting Up Your Environment</h2>
<p>First, make sure you have the necessary libraries installed. If you&rsquo;re using Anaconda, you likely already have these. If not, install them using pip:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>pip install matplotlib seaborn pandas numpy
</span></span></code></pre></div><p>Let&rsquo;s import the libraries we&rsquo;ll need:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> matplotlib.pyplot <span style="color:#66d9ef">as</span> plt
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> seaborn <span style="color:#66d9ef">as</span> sns
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> pandas <span style="color:#66d9ef">as</span> pd
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Set the style for our plots</span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>style<span style="color:#f92672">.</span>use(<span style="color:#e6db74">&#39;seaborn-v0_8-whitegrid&#39;</span>)  <span style="color:#75715e"># Clean, professional look</span>
</span></span></code></pre></div><h2 id="matplotlib-basics-your-visualization-foundation">Matplotlib Basics: Your Visualization Foundation</h2>
<p>Matplotlib is the cornerstone of Python visualization. While it can be a bit verbose, it gives you complete control over your plots.</p>
<h3 id="creating-a-simple-line-plot">Creating a Simple Line Plot</h3>
<p>Let&rsquo;s start with a simple line chart showing monthly revenue:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Sample financial data</span>
</span></span><span style="display:flex;"><span>months <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Jan&#39;</span>, <span style="color:#e6db74">&#39;Feb&#39;</span>, <span style="color:#e6db74">&#39;Mar&#39;</span>, <span style="color:#e6db74">&#39;Apr&#39;</span>, <span style="color:#e6db74">&#39;May&#39;</span>, <span style="color:#e6db74">&#39;Jun&#39;</span>]
</span></span><span style="display:flex;"><span>revenue <span style="color:#f92672">=</span> [<span style="color:#ae81ff">45000</span>, <span style="color:#ae81ff">48000</span>, <span style="color:#ae81ff">47500</span>, <span style="color:#ae81ff">52000</span>, <span style="color:#ae81ff">56000</span>, <span style="color:#ae81ff">58000</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create a simple line plot</span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>figure(figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">6</span>))  <span style="color:#75715e"># Set figure size (width, height in inches)</span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>plot(months, revenue, marker<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;o&#39;</span>, linewidth<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#004D99&#39;</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#39;Monthly Revenue (2025)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>xlabel(<span style="color:#e6db74">&#39;Month&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>ylabel(<span style="color:#e6db74">&#39;Revenue ($)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>This code creates a line chart showing monthly revenue. Let&rsquo;s break down what each part does:</p>
<ul>
<li><code>plt.figure(figsize=(10, 6))</code>: Sets the size of our chart (width by height in inches)</li>
<li><code>plt.plot()</code>: Creates the actual line plot with data points</li>
<li><code>marker='o'</code>: Adds circular markers at each data point</li>
<li><code>linewidth=2</code>: Makes the line thicker for better visibility</li>
<li><code>color='#004D99'</code>: Sets a professional blue color using hex code</li>
<li>The remaining functions add title, labels, and grid lines</li>
</ul>
<h3 id="bar-charts-for-comparison">Bar Charts for Comparison</h3>
<p>Bar charts are excellent for comparing categorical data, like department expenses:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>departments <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Finance&#39;</span>, <span style="color:#e6db74">&#39;Marketing&#39;</span>, <span style="color:#e6db74">&#39;Operations&#39;</span>, <span style="color:#e6db74">&#39;IT&#39;</span>, <span style="color:#e6db74">&#39;HR&#39;</span>]
</span></span><span style="display:flex;"><span>expenses <span style="color:#f92672">=</span> [<span style="color:#ae81ff">65000</span>, <span style="color:#ae81ff">72000</span>, <span style="color:#ae81ff">89000</span>, <span style="color:#ae81ff">56000</span>, <span style="color:#ae81ff">48000</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>figure(figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">6</span>))
</span></span><span style="display:flex;"><span>bars <span style="color:#f92672">=</span> plt<span style="color:#f92672">.</span>bar(departments, expenses, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#2D7BB6&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add value labels on top of each bar</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> bar <span style="color:#f92672">in</span> bars:
</span></span><span style="display:flex;"><span>    height <span style="color:#f92672">=</span> bar<span style="color:#f92672">.</span>get_height()
</span></span><span style="display:flex;"><span>    plt<span style="color:#f92672">.</span>text(bar<span style="color:#f92672">.</span>get_x() <span style="color:#f92672">+</span> bar<span style="color:#f92672">.</span>get_width()<span style="color:#f92672">/</span><span style="color:#ae81ff">2.</span>, height <span style="color:#f92672">+</span> <span style="color:#ae81ff">1000</span>,
</span></span><span style="display:flex;"><span>             <span style="color:#e6db74">f</span><span style="color:#e6db74">&#39;$</span><span style="color:#e6db74">{</span>height<span style="color:#e6db74">:</span><span style="color:#e6db74">,</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#39;</span>, ha<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;center&#39;</span>, va<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;bottom&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#39;Q1 Department Expenses&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>xlabel(<span style="color:#e6db74">&#39;Department&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>ylabel(<span style="color:#e6db74">&#39;Expenses ($)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>ylim(<span style="color:#ae81ff">0</span>, max(expenses) <span style="color:#f92672">*</span> <span style="color:#ae81ff">1.15</span>)  <span style="color:#75715e"># Add some headroom for the labels</span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>This code adds a nice touch by displaying the actual values above each bar, making it easy to see the exact numbers while still getting the visual comparison.</p>
<h3 id="pie-charts-for-part-to-whole-relationships">Pie Charts for Part-to-Whole Relationships</h3>
<p>Pie charts can be effective for showing how parts make up a whole, such as budget allocation:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>categories <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Salaries&#39;</span>, <span style="color:#e6db74">&#39;Marketing&#39;</span>, <span style="color:#e6db74">&#39;R&amp;D&#39;</span>, <span style="color:#e6db74">&#39;Operations&#39;</span>, <span style="color:#e6db74">&#39;Other&#39;</span>]
</span></span><span style="display:flex;"><span>budget_allocation <span style="color:#f92672">=</span> [<span style="color:#ae81ff">45</span>, <span style="color:#ae81ff">15</span>, <span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">12</span>, <span style="color:#ae81ff">8</span>]  <span style="color:#75715e"># percentages</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>figure(figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">7</span>))
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>pie(budget_allocation, labels<span style="color:#f92672">=</span>categories, autopct<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;</span><span style="color:#e6db74">%1.1f%%</span><span style="color:#e6db74">&#39;</span>,
</span></span><span style="display:flex;"><span>        startangle<span style="color:#f92672">=</span><span style="color:#ae81ff">90</span>, shadow<span style="color:#f92672">=</span><span style="color:#66d9ef">False</span>, explode<span style="color:#f92672">=</span>[<span style="color:#ae81ff">0.05</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>],
</span></span><span style="display:flex;"><span>        colors<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#39;#4878D0&#39;</span>, <span style="color:#e6db74">&#39;#EE854A&#39;</span>, <span style="color:#e6db74">&#39;#6ACC64&#39;</span>, <span style="color:#e6db74">&#39;#D65F5F&#39;</span>, <span style="color:#e6db74">&#39;#956CB4&#39;</span>])
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#39;Annual Budget Allocation&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>axis(<span style="color:#e6db74">&#39;equal&#39;</span>)  <span style="color:#75715e"># Equal aspect ratio ensures the pie chart is circular</span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>The <code>explode</code> parameter slightly separates the &lsquo;Salaries&rsquo; slice to emphasize it as the largest expense.</p>
<h3 id="histograms-for-distribution-analysis">Histograms for Distribution Analysis</h3>
<p>Histograms help visualize the distribution of continuous data. This is useful for analyzing things like daily stock returns:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Generate some random daily returns data (normally distributed)</span>
</span></span><span style="display:flex;"><span>np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>seed(<span style="color:#ae81ff">42</span>)  <span style="color:#75715e"># For reproducibility</span>
</span></span><span style="display:flex;"><span>daily_returns <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">0.001</span>, <span style="color:#ae81ff">0.02</span>, <span style="color:#ae81ff">250</span>)  <span style="color:#75715e"># Mean, std dev, number of trading days</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>figure(figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">6</span>))
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>hist(daily_returns, bins<span style="color:#f92672">=</span><span style="color:#ae81ff">25</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#2D7BB6&#39;</span>, edgecolor<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;black&#39;</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>axvline(x<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;r&#39;</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)  <span style="color:#75715e"># Add line at x=0</span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#39;Distribution of Daily Stock Returns&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>xlabel(<span style="color:#e6db74">&#39;Daily Return&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>ylabel(<span style="color:#e6db74">&#39;Frequency&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>The red vertical line at x=0 helps distinguish between positive and negative returns.</p>
<h3 id="scatter-plots-for-correlation-analysis">Scatter Plots for Correlation Analysis</h3>
<p>Scatter plots are perfect for examining relationships between two variables, like the correlation between marketing spend and revenue:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Generate sample data</span>
</span></span><span style="display:flex;"><span>np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>seed(<span style="color:#ae81ff">42</span>)
</span></span><span style="display:flex;"><span>marketing_spend <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">50000</span>, <span style="color:#ae81ff">15000</span>, <span style="color:#ae81ff">30</span>)  <span style="color:#75715e"># 30 months of data</span>
</span></span><span style="display:flex;"><span>revenue <span style="color:#f92672">=</span> <span style="color:#ae81ff">3.5</span> <span style="color:#f92672">*</span> marketing_spend <span style="color:#f92672">+</span> np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">20000</span>, <span style="color:#ae81ff">40000</span>, <span style="color:#ae81ff">30</span>)  <span style="color:#75715e"># Revenue with noise</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>figure(figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">6</span>))
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>scatter(marketing_spend, revenue, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#2D7BB6&#39;</span>, edgecolor<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;black&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add a trend line</span>
</span></span><span style="display:flex;"><span>z <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>polyfit(marketing_spend, revenue, <span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>p <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>poly1d(z)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>plot(marketing_spend, p(marketing_spend), <span style="color:#e6db74">&#34;r--&#34;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#39;Correlation: Marketing Spend vs. Revenue&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>xlabel(<span style="color:#e6db74">&#39;Marketing Spend ($)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>ylabel(<span style="color:#e6db74">&#39;Revenue ($)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>The trend line helps visualize the overall relationship between the variables.</p>
<h2 id="customizing-matplotlib-plots">Customizing Matplotlib Plots</h2>
<p>Now let&rsquo;s look at some additional customization options that can make your financial visualizations more professional and effective.</p>
<h3 id="creating-subplots">Creating Subplots</h3>
<p>Often you&rsquo;ll want to show multiple related charts together. Subplots are perfect for this:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Generate some financial data</span>
</span></span><span style="display:flex;"><span>months <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Jan&#39;</span>, <span style="color:#e6db74">&#39;Feb&#39;</span>, <span style="color:#e6db74">&#39;Mar&#39;</span>, <span style="color:#e6db74">&#39;Apr&#39;</span>, <span style="color:#e6db74">&#39;May&#39;</span>, <span style="color:#e6db74">&#39;Jun&#39;</span>]
</span></span><span style="display:flex;"><span>revenue <span style="color:#f92672">=</span> [<span style="color:#ae81ff">45000</span>, <span style="color:#ae81ff">48000</span>, <span style="color:#ae81ff">47500</span>, <span style="color:#ae81ff">52000</span>, <span style="color:#ae81ff">56000</span>, <span style="color:#ae81ff">58000</span>]
</span></span><span style="display:flex;"><span>expenses <span style="color:#f92672">=</span> [<span style="color:#ae81ff">38000</span>, <span style="color:#ae81ff">42000</span>, <span style="color:#ae81ff">40000</span>, <span style="color:#ae81ff">43000</span>, <span style="color:#ae81ff">45000</span>, <span style="color:#ae81ff">47000</span>]
</span></span><span style="display:flex;"><span>profit <span style="color:#f92672">=</span> [r <span style="color:#f92672">-</span> e <span style="color:#66d9ef">for</span> r, e <span style="color:#f92672">in</span> zip(revenue, expenses)]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create subplots</span>
</span></span><span style="display:flex;"><span>fig, (ax1, ax2) <span style="color:#f92672">=</span> plt<span style="color:#f92672">.</span>subplots(<span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">1</span>, figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">12</span>, <span style="color:#ae81ff">10</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># First subplot: Revenue and Expenses</span>
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>plot(months, revenue, <span style="color:#e6db74">&#39;o-&#39;</span>, label<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;Revenue&#39;</span>, linewidth<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#2D7BB6&#39;</span>)
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>plot(months, expenses, <span style="color:#e6db74">&#39;s-&#39;</span>, label<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;Expenses&#39;</span>, linewidth<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#EE854A&#39;</span>)
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>set_title(<span style="color:#e6db74">&#39;Revenue vs. Expenses (H1 2025)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>set_ylabel(<span style="color:#e6db74">&#39;Amount ($)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>legend()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Second subplot: Profit</span>
</span></span><span style="display:flex;"><span>bars <span style="color:#f92672">=</span> ax2<span style="color:#f92672">.</span>bar(months, profit, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#6ACC64&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add value labels on top of each bar</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> bar <span style="color:#f92672">in</span> bars:
</span></span><span style="display:flex;"><span>    height <span style="color:#f92672">=</span> bar<span style="color:#f92672">.</span>get_height()
</span></span><span style="display:flex;"><span>    ax2<span style="color:#f92672">.</span>text(bar<span style="color:#f92672">.</span>get_x() <span style="color:#f92672">+</span> bar<span style="color:#f92672">.</span>get_width()<span style="color:#f92672">/</span><span style="color:#ae81ff">2.</span>, height <span style="color:#f92672">+</span> <span style="color:#ae81ff">500</span>,
</span></span><span style="display:flex;"><span>             <span style="color:#e6db74">f</span><span style="color:#e6db74">&#39;$</span><span style="color:#e6db74">{</span>height<span style="color:#e6db74">:</span><span style="color:#e6db74">,</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#39;</span>, ha<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;center&#39;</span>, va<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;bottom&#39;</span>)
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>ax2<span style="color:#f92672">.</span>set_title(<span style="color:#e6db74">&#39;Monthly Profit (H1 2025)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>ax2<span style="color:#f92672">.</span>set_xlabel(<span style="color:#e6db74">&#39;Month&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>ax2<span style="color:#f92672">.</span>set_ylabel(<span style="color:#e6db74">&#39;Profit ($)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>ax2<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>This code creates two charts stacked vertically: a line chart comparing revenue and expenses, and a bar chart showing the resulting profit.</p>
<h3 id="adding-annotations">Adding Annotations</h3>
<p>Annotations can add important context to your charts:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>quarters <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Q1 2024&#39;</span>, <span style="color:#e6db74">&#39;Q2 2024&#39;</span>, <span style="color:#e6db74">&#39;Q3 2024&#39;</span>, <span style="color:#e6db74">&#39;Q4 2024&#39;</span>, <span style="color:#e6db74">&#39;Q1 2025&#39;</span>]
</span></span><span style="display:flex;"><span>stock_price <span style="color:#f92672">=</span> [<span style="color:#ae81ff">45.50</span>, <span style="color:#ae81ff">48.75</span>, <span style="color:#ae81ff">52.30</span>, <span style="color:#ae81ff">54.10</span>, <span style="color:#ae81ff">62.80</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fig, ax <span style="color:#f92672">=</span> plt<span style="color:#f92672">.</span>subplots(figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">6</span>))
</span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>plot(quarters, stock_price, <span style="color:#e6db74">&#39;o-&#39;</span>, linewidth<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#2D7BB6&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add annotation for significant event</span>
</span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>annotate(<span style="color:#e6db74">&#39;New Product Launch&#39;</span>, 
</span></span><span style="display:flex;"><span>            xy<span style="color:#f92672">=</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">54.10</span>),  <span style="color:#75715e"># Position to point at</span>
</span></span><span style="display:flex;"><span>            xytext<span style="color:#f92672">=</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">58</span>),  <span style="color:#75715e"># Text position</span>
</span></span><span style="display:flex;"><span>            arrowprops<span style="color:#f92672">=</span>dict(facecolor<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;black&#39;</span>, shrink<span style="color:#f92672">=</span><span style="color:#ae81ff">0.05</span>, width<span style="color:#f92672">=</span><span style="color:#ae81ff">1.5</span>),
</span></span><span style="display:flex;"><span>            fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add annotation for earnings report</span>
</span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>annotate(<span style="color:#e6db74">&#39;Earnings Beat</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">Estimates by 15%&#39;</span>, 
</span></span><span style="display:flex;"><span>            xy<span style="color:#f92672">=</span>(<span style="color:#ae81ff">4</span>, <span style="color:#ae81ff">62.80</span>),  <span style="color:#75715e"># Position to point at</span>
</span></span><span style="display:flex;"><span>            xytext<span style="color:#f92672">=</span>(<span style="color:#ae81ff">3.5</span>, <span style="color:#ae81ff">67</span>),  <span style="color:#75715e"># Text position</span>
</span></span><span style="display:flex;"><span>            arrowprops<span style="color:#f92672">=</span>dict(facecolor<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;black&#39;</span>, shrink<span style="color:#f92672">=</span><span style="color:#ae81ff">0.05</span>, width<span style="color:#f92672">=</span><span style="color:#ae81ff">1.5</span>),
</span></span><span style="display:flex;"><span>            fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>set_title(<span style="color:#e6db74">&#39;Quarterly Stock Price&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>set_ylabel(<span style="color:#e6db74">&#39;Price ($)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><h3 id="saving-your-plots">Saving Your Plots</h3>
<p>Save your visualizations for reports or presentations:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>figure(figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">6</span>))
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>plot(months, revenue, marker<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;o&#39;</span>, linewidth<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#004D99&#39;</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#39;Monthly Revenue (2025)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>xlabel(<span style="color:#e6db74">&#39;Month&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>ylabel(<span style="color:#e6db74">&#39;Revenue ($)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Save in different formats</span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>savefig(<span style="color:#e6db74">&#39;monthly_revenue.png&#39;</span>, dpi<span style="color:#f92672">=</span><span style="color:#ae81ff">300</span>)  <span style="color:#75715e"># High-resolution PNG</span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>savefig(<span style="color:#e6db74">&#39;monthly_revenue.pdf&#39;</span>)  <span style="color:#75715e"># PDF for publications</span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>savefig(<span style="color:#e6db74">&#39;monthly_revenue.svg&#39;</span>)  <span style="color:#75715e"># Scalable vector graphic</span>
</span></span></code></pre></div><h2 id="advanced-visualization-with-seaborn">Advanced Visualization with Seaborn</h2>
<p>Seaborn builds on matplotlib and provides a higher-level interface for creating attractive statistical graphics.</p>
<h3 id="heatmaps-for-correlation-matrices">Heatmaps for Correlation Matrices</h3>
<p>Heatmaps are excellent for visualizing correlation matrices of financial instruments:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Generate correlated returns for 5 assets</span>
</span></span><span style="display:flex;"><span>np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>seed(<span style="color:#ae81ff">42</span>)
</span></span><span style="display:flex;"><span>n <span style="color:#f92672">=</span> <span style="color:#ae81ff">1000</span>  <span style="color:#75715e"># Number of days</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create correlated returns for 5 assets</span>
</span></span><span style="display:flex;"><span>corr_matrix <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>array([
</span></span><span style="display:flex;"><span>    [<span style="color:#ae81ff">1.0</span>, <span style="color:#ae81ff">0.7</span>, <span style="color:#ae81ff">0.5</span>, <span style="color:#ae81ff">0.3</span>, <span style="color:#ae81ff">0.1</span>],
</span></span><span style="display:flex;"><span>    [<span style="color:#ae81ff">0.7</span>, <span style="color:#ae81ff">1.0</span>, <span style="color:#ae81ff">0.6</span>, <span style="color:#ae81ff">0.4</span>, <span style="color:#ae81ff">0.2</span>],
</span></span><span style="display:flex;"><span>    [<span style="color:#ae81ff">0.5</span>, <span style="color:#ae81ff">0.6</span>, <span style="color:#ae81ff">1.0</span>, <span style="color:#ae81ff">0.7</span>, <span style="color:#ae81ff">0.5</span>],
</span></span><span style="display:flex;"><span>    [<span style="color:#ae81ff">0.3</span>, <span style="color:#ae81ff">0.4</span>, <span style="color:#ae81ff">0.7</span>, <span style="color:#ae81ff">1.0</span>, <span style="color:#ae81ff">0.6</span>],
</span></span><span style="display:flex;"><span>    [<span style="color:#ae81ff">0.1</span>, <span style="color:#ae81ff">0.2</span>, <span style="color:#ae81ff">0.5</span>, <span style="color:#ae81ff">0.6</span>, <span style="color:#ae81ff">1.0</span>]
</span></span><span style="display:flex;"><span>])
</span></span><span style="display:flex;"><span>asset_names <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;S&amp;P 500&#39;</span>, <span style="color:#e6db74">&#39;NASDAQ&#39;</span>, <span style="color:#e6db74">&#39;DJIA&#39;</span>, <span style="color:#e6db74">&#39;Treasury Bonds&#39;</span>, <span style="color:#e6db74">&#39;Gold&#39;</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>figure(figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">8</span>))
</span></span><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>heatmap(corr_matrix, annot<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>, cmap<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;coolwarm&#39;</span>, 
</span></span><span style="display:flex;"><span>            xticklabels<span style="color:#f92672">=</span>asset_names, yticklabels<span style="color:#f92672">=</span>asset_names,
</span></span><span style="display:flex;"><span>            linewidths<span style="color:#f92672">=</span><span style="color:#ae81ff">0.5</span>, vmin<span style="color:#f92672">=-</span><span style="color:#ae81ff">1</span>, vmax<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#39;Asset Correlation Matrix&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>This creates a heatmap showing the correlation between different assets, with values annotated directly on the cells.</p>
<h3 id="box-plots-for-distribution-comparison">Box Plots for Distribution Comparison</h3>
<p>Box plots are useful for comparing distributions, like monthly expenses across departments:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Create sample data</span>
</span></span><span style="display:flex;"><span>departments <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Finance&#39;</span>, <span style="color:#e6db74">&#39;Marketing&#39;</span>, <span style="color:#e6db74">&#39;Operations&#39;</span>, <span style="color:#e6db74">&#39;IT&#39;</span>, <span style="color:#e6db74">&#39;HR&#39;</span>]
</span></span><span style="display:flex;"><span>data <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Department&#39;</span>: np<span style="color:#f92672">.</span>repeat(departments, <span style="color:#ae81ff">20</span>),
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Monthly_Expense&#39;</span>: [
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">*</span>np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">5000</span>, <span style="color:#ae81ff">800</span>, <span style="color:#ae81ff">20</span>),   <span style="color:#75715e"># Finance</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">*</span>np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">8500</span>, <span style="color:#ae81ff">1200</span>, <span style="color:#ae81ff">20</span>),  <span style="color:#75715e"># Marketing</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">*</span>np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">7200</span>, <span style="color:#ae81ff">1500</span>, <span style="color:#ae81ff">20</span>),  <span style="color:#75715e"># Operations</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">*</span>np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">6800</span>, <span style="color:#ae81ff">1000</span>, <span style="color:#ae81ff">20</span>),  <span style="color:#75715e"># IT</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">*</span>np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">4500</span>, <span style="color:#ae81ff">600</span>, <span style="color:#ae81ff">20</span>)    <span style="color:#75715e"># HR</span>
</span></span><span style="display:flex;"><span>    ]
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>df <span style="color:#f92672">=</span> pd<span style="color:#f92672">.</span>DataFrame(data)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>figure(figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">12</span>, <span style="color:#ae81ff">7</span>))
</span></span><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>boxplot(x<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;Department&#39;</span>, y<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;Monthly_Expense&#39;</span>, data<span style="color:#f92672">=</span>df, palette<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;muted&#39;</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#39;Monthly Expense Distribution by Department&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>xlabel(<span style="color:#e6db74">&#39;Department&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>ylabel(<span style="color:#e6db74">&#39;Monthly Expense ($)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>Box plots show the median, quartiles, and outliers, giving you a complete picture of each distribution.</p>
<h3 id="pair-plots-for-multi-variable-analysis">Pair Plots for Multi-variable Analysis</h3>
<p>When analyzing multiple variables, pair plots can show all possible scatter plots at once:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Generate sample financial metrics for companies</span>
</span></span><span style="display:flex;"><span>np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>seed(<span style="color:#ae81ff">42</span>)
</span></span><span style="display:flex;"><span>n_companies <span style="color:#f92672">=</span> <span style="color:#ae81ff">30</span>
</span></span><span style="display:flex;"><span>revenue <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">1000</span>, <span style="color:#ae81ff">300</span>, n_companies)
</span></span><span style="display:flex;"><span>profit_margin <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">0.15</span>, <span style="color:#ae81ff">0.05</span>, n_companies)
</span></span><span style="display:flex;"><span>debt_to_equity <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">0.5</span>, <span style="color:#ae81ff">0.2</span>, n_companies)
</span></span><span style="display:flex;"><span>pe_ratio <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>random<span style="color:#f92672">.</span>normal(<span style="color:#ae81ff">18</span>, <span style="color:#ae81ff">5</span>, n_companies)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>df <span style="color:#f92672">=</span> pd<span style="color:#f92672">.</span>DataFrame({
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Revenue&#39;</span>: revenue,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Profit_Margin&#39;</span>: profit_margin,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Debt_to_Equity&#39;</span>: debt_to_equity,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;PE_Ratio&#39;</span>: pe_ratio
</span></span><span style="display:flex;"><span>})
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create pair plot</span>
</span></span><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>pairplot(df, height<span style="color:#f92672">=</span><span style="color:#ae81ff">2.5</span>, corner<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>suptitle(<span style="color:#e6db74">&#39;Relationships Between Financial Metrics&#39;</span>, y<span style="color:#f92672">=</span><span style="color:#ae81ff">1.02</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">16</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>This creates scatter plots for every combination of variables, helping you spot relationships between multiple financial metrics at once.</p>
<h3 id="combined-line-and-bar-chart">Combined Line and Bar Chart</h3>
<p>For financial reports, you often want to combine different chart types, like showing monthly profit as bars with a revenue trend line:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>months <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Jan&#39;</span>, <span style="color:#e6db74">&#39;Feb&#39;</span>, <span style="color:#e6db74">&#39;Mar&#39;</span>, <span style="color:#e6db74">&#39;Apr&#39;</span>, <span style="color:#e6db74">&#39;May&#39;</span>, <span style="color:#e6db74">&#39;Jun&#39;</span>]
</span></span><span style="display:flex;"><span>revenue <span style="color:#f92672">=</span> [<span style="color:#ae81ff">250</span>, <span style="color:#ae81ff">310</span>, <span style="color:#ae81ff">290</span>, <span style="color:#ae81ff">340</span>, <span style="color:#ae81ff">390</span>, <span style="color:#ae81ff">420</span>]  <span style="color:#75715e"># in thousands</span>
</span></span><span style="display:flex;"><span>profit <span style="color:#f92672">=</span> [<span style="color:#ae81ff">50</span>, <span style="color:#ae81ff">70</span>, <span style="color:#ae81ff">65</span>, <span style="color:#ae81ff">85</span>, <span style="color:#ae81ff">100</span>, <span style="color:#ae81ff">115</span>]  <span style="color:#75715e"># in thousands</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fig, ax1 <span style="color:#f92672">=</span> plt<span style="color:#f92672">.</span>subplots(figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">6</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Bar chart for profit</span>
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>bar(months, profit, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#6ACC64&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>, label<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;Profit&#39;</span>)
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>set_xlabel(<span style="color:#e6db74">&#39;Month&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>set_ylabel(<span style="color:#e6db74">&#39;Profit ($ thousands)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>tick_params(axis<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;y&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create second y-axis for revenue</span>
</span></span><span style="display:flex;"><span>ax2 <span style="color:#f92672">=</span> ax1<span style="color:#f92672">.</span>twinx()
</span></span><span style="display:flex;"><span>ax2<span style="color:#f92672">.</span>plot(months, revenue, <span style="color:#e6db74">&#39;o-&#39;</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#2D7BB6&#39;</span>, linewidth<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, label<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;Revenue&#39;</span>)
</span></span><span style="display:flex;"><span>ax2<span style="color:#f92672">.</span>set_ylabel(<span style="color:#e6db74">&#39;Revenue ($ thousands)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>ax2<span style="color:#f92672">.</span>tick_params(axis<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;y&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add legends</span>
</span></span><span style="display:flex;"><span>lines1, labels1 <span style="color:#f92672">=</span> ax1<span style="color:#f92672">.</span>get_legend_handles_labels()
</span></span><span style="display:flex;"><span>lines2, labels2 <span style="color:#f92672">=</span> ax2<span style="color:#f92672">.</span>get_legend_handles_labels()
</span></span><span style="display:flex;"><span>ax1<span style="color:#f92672">.</span>legend(lines1 <span style="color:#f92672">+</span> lines2, labels1 <span style="color:#f92672">+</span> labels2, loc<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;upper left&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#39;Monthly Revenue and Profit (H1 2025)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">15</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>This creates a dual-axis chart with bars for profit and a line for revenue, making it easy to see the relationship between the two.</p>
<h2 id="best-practices-for-financial-visualizations">Best Practices for Financial Visualizations</h2>
<p>Based on my experience in finance, here are some best practices to make your visualizations more effective:</p>
<ol>
<li>
<p><strong>Choose the right chart type</strong> for your data and the story you want to tell:</p>
<ul>
<li>Line charts for trends over time</li>
<li>Bar charts for comparing categories</li>
<li>Pie charts for part-to-whole relationships (use sparingly)</li>
<li>Scatter plots for correlations</li>
<li>Box plots for distributions</li>
</ul>
</li>
<li>
<p><strong>Keep it simple and focused</strong> - make sure your visualization answers a specific question or highlights a key insight.</p>
</li>
<li>
<p><strong>Use consistent colors</strong> that represent your data appropriately (red for negative, green for positive in financial contexts).</p>
</li>
<li>
<p><strong>Label everything clearly</strong> - titles, axes, legends, and data points where appropriate.</p>
</li>
<li>
<p><strong>Consider your audience</strong> - executives might want high-level trends, while analysts need more detailed visualizations.</p>
</li>
<li>
<p><strong>Use appropriate scales</strong> - avoid truncating axes in ways that might exaggerate changes.</p>
</li>
<li>
<p><strong>Add context with annotations</strong> - highlight key events or outliers to tell the complete story.</p>
</li>
</ol>
<h2 id="practical-exercise-financial-dashboard">Practical Exercise: Financial Dashboard</h2>
<p>Let&rsquo;s put everything together to create a simple financial dashboard with multiple charts:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Create sample data</span>
</span></span><span style="display:flex;"><span>months <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Jan&#39;</span>, <span style="color:#e6db74">&#39;Feb&#39;</span>, <span style="color:#e6db74">&#39;Mar&#39;</span>, <span style="color:#e6db74">&#39;Apr&#39;</span>, <span style="color:#e6db74">&#39;May&#39;</span>, <span style="color:#e6db74">&#39;Jun&#39;</span>]
</span></span><span style="display:flex;"><span>revenue <span style="color:#f92672">=</span> [<span style="color:#ae81ff">250</span>, <span style="color:#ae81ff">310</span>, <span style="color:#ae81ff">290</span>, <span style="color:#ae81ff">340</span>, <span style="color:#ae81ff">390</span>, <span style="color:#ae81ff">420</span>]  <span style="color:#75715e"># in thousands</span>
</span></span><span style="display:flex;"><span>expenses <span style="color:#f92672">=</span> [<span style="color:#ae81ff">200</span>, <span style="color:#ae81ff">240</span>, <span style="color:#ae81ff">225</span>, <span style="color:#ae81ff">255</span>, <span style="color:#ae81ff">290</span>, <span style="color:#ae81ff">305</span>]  <span style="color:#75715e"># in thousands</span>
</span></span><span style="display:flex;"><span>profit <span style="color:#f92672">=</span> [r <span style="color:#f92672">-</span> e <span style="color:#66d9ef">for</span> r, e <span style="color:#f92672">in</span> zip(revenue, expenses)]  <span style="color:#75715e"># in thousands</span>
</span></span><span style="display:flex;"><span>profit_margin <span style="color:#f92672">=</span> [p<span style="color:#f92672">/</span>r <span style="color:#66d9ef">for</span> p, r <span style="color:#f92672">in</span> zip(profit, revenue)]
</span></span><span style="display:flex;"><span>expense_breakdown <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Salaries&#39;</span>: [<span style="color:#ae81ff">120</span>, <span style="color:#ae81ff">125</span>, <span style="color:#ae81ff">130</span>, <span style="color:#ae81ff">132</span>, <span style="color:#ae81ff">135</span>, <span style="color:#ae81ff">140</span>],
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Marketing&#39;</span>: [<span style="color:#ae81ff">30</span>, <span style="color:#ae81ff">55</span>, <span style="color:#ae81ff">40</span>, <span style="color:#ae81ff">58</span>, <span style="color:#ae81ff">82</span>, <span style="color:#ae81ff">85</span>],
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Operations&#39;</span>: [<span style="color:#ae81ff">35</span>, <span style="color:#ae81ff">40</span>, <span style="color:#ae81ff">35</span>, <span style="color:#ae81ff">45</span>, <span style="color:#ae81ff">50</span>, <span style="color:#ae81ff">55</span>],
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Other&#39;</span>: [<span style="color:#ae81ff">15</span>, <span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">23</span>, <span style="color:#ae81ff">25</span>]
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create a 2x2 grid of subplots</span>
</span></span><span style="display:flex;"><span>fig, axs <span style="color:#f92672">=</span> plt<span style="color:#f92672">.</span>subplots(<span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">2</span>, figsize<span style="color:#f92672">=</span>(<span style="color:#ae81ff">15</span>, <span style="color:#ae81ff">12</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Plot 1: Revenue and Expenses line chart (top left)</span>
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>plot(months, revenue, <span style="color:#e6db74">&#39;o-&#39;</span>, label<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;Revenue&#39;</span>, linewidth<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#2D7BB6&#39;</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>plot(months, expenses, <span style="color:#e6db74">&#39;s-&#39;</span>, label<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;Expenses&#39;</span>, linewidth<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#EE854A&#39;</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>set_title(<span style="color:#e6db74">&#39;Revenue vs. Expenses&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">14</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>set_ylabel(<span style="color:#e6db74">&#39;Amount ($ thousands)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>legend()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Plot 2: Profit bar chart (top right)</span>
</span></span><span style="display:flex;"><span>bars <span style="color:#f92672">=</span> axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>bar(months, profit, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#6ACC64&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> bar <span style="color:#f92672">in</span> bars:
</span></span><span style="display:flex;"><span>    height <span style="color:#f92672">=</span> bar<span style="color:#f92672">.</span>get_height()
</span></span><span style="display:flex;"><span>    axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>text(bar<span style="color:#f92672">.</span>get_x() <span style="color:#f92672">+</span> bar<span style="color:#f92672">.</span>get_width()<span style="color:#f92672">/</span><span style="color:#ae81ff">2.</span>, height <span style="color:#f92672">+</span> <span style="color:#ae81ff">2</span>,
</span></span><span style="display:flex;"><span>             <span style="color:#e6db74">f</span><span style="color:#e6db74">&#39;$</span><span style="color:#e6db74">{</span>height<span style="color:#e6db74">:</span><span style="color:#e6db74">,</span><span style="color:#e6db74">}</span><span style="color:#e6db74">k&#39;</span>, ha<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;center&#39;</span>, va<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;bottom&#39;</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>set_title(<span style="color:#e6db74">&#39;Monthly Profit&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">14</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>set_ylabel(<span style="color:#e6db74">&#39;Profit ($ thousands)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Plot 3: Expense breakdown stacked bar chart (bottom left)</span>
</span></span><span style="display:flex;"><span>bottom <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>zeros(<span style="color:#ae81ff">6</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> category, values <span style="color:#f92672">in</span> expense_breakdown<span style="color:#f92672">.</span>items():
</span></span><span style="display:flex;"><span>    axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>bar(months, values, bottom<span style="color:#f92672">=</span>bottom, label<span style="color:#f92672">=</span>category)
</span></span><span style="display:flex;"><span>    bottom <span style="color:#f92672">+=</span> values
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>set_title(<span style="color:#e6db74">&#39;Expense Breakdown&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">14</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>set_xlabel(<span style="color:#e6db74">&#39;Month&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>set_ylabel(<span style="color:#e6db74">&#39;Expenses ($ thousands)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>legend()
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Plot 4: Profit margin line chart (bottom right)</span>
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>plot(months, [m<span style="color:#f92672">*</span><span style="color:#ae81ff">100</span> <span style="color:#66d9ef">for</span> m <span style="color:#f92672">in</span> profit_margin], <span style="color:#e6db74">&#39;D-&#39;</span>, color<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;#956CB4&#39;</span>, linewidth<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> i, m <span style="color:#f92672">in</span> enumerate(profit_margin):
</span></span><span style="display:flex;"><span>    axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>text(i, m<span style="color:#f92672">*</span><span style="color:#ae81ff">100</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0.5</span>, <span style="color:#e6db74">f</span><span style="color:#e6db74">&#39;</span><span style="color:#e6db74">{</span>m<span style="color:#f92672">*</span><span style="color:#ae81ff">100</span><span style="color:#e6db74">:</span><span style="color:#e6db74">.1f</span><span style="color:#e6db74">}</span><span style="color:#e6db74">%&#39;</span>, ha<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;center&#39;</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>set_title(<span style="color:#e6db74">&#39;Profit Margin&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">14</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>set_xlabel(<span style="color:#e6db74">&#39;Month&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>set_ylabel(<span style="color:#e6db74">&#39;Margin (%)&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">12</span>)
</span></span><span style="display:flex;"><span>axs[<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>grid(<span style="color:#66d9ef">True</span>, linestyle<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--&#39;</span>, alpha<span style="color:#f92672">=</span><span style="color:#ae81ff">0.7</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>suptitle(<span style="color:#e6db74">&#39;H1 2025 Financial Performance Dashboard&#39;</span>, fontsize<span style="color:#f92672">=</span><span style="color:#ae81ff">18</span>, y<span style="color:#f92672">=</span><span style="color:#ae81ff">1.02</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>subplots_adjust(top<span style="color:#f92672">=</span><span style="color:#ae81ff">0.9</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>savefig(<span style="color:#e6db74">&#39;financial_dashboard.png&#39;</span>, dpi<span style="color:#f92672">=</span><span style="color:#ae81ff">300</span>, bbox_inches<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;tight&#39;</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>show()
</span></span></code></pre></div><p>This code creates a comprehensive financial dashboard with four different visualizations that provide a complete picture of the financial performance.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Data visualization is a powerful tool in your financial analysis toolkit. With matplotlib and seaborn, you can create everything from simple charts to complex dashboards that help you and your stakeholders understand financial data more effectively.</p>
<p>In this post, we&rsquo;ve covered:</p>
<ul>
<li>Creating basic charts (line, bar, pie, histogram, scatter)</li>
<li>Customizing your plots with titles, labels, and annotations</li>
<li>Using advanced features like subplots and dual axes</li>
<li>Applying seaborn for statistical visualizations</li>
<li>Building a financial dashboard</li>
</ul>
<p>As you continue your Python journey, I encourage you to experiment with these visualization techniques on your own financial data. Try recreating some of the charts you currently use in Excel or other tools, and see how Python can enhance your financial analysis workflow.</p>
<p>In the next post, we&rsquo;ll explore object-oriented programming (OOP) in Python, which will help you organize your code more effectively for larger projects.</p>
<p>Until then, happy visualizing!</p>
]]></content:encoded></item></channel></rss>